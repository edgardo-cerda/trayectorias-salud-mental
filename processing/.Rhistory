# Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters)
ward.range <- WeightedCluster::as.clustrange(ward, diss = dist, ncluster = K)
# Visualizar clusters:
ward.range$stats %>%
mutate(clusters = 2:10) %>%
pivot_longer(cols = c(ASWw, HG, PBC, HC),
names_to = 'indicador',
values_to = 'value') %>%
group_by(indicador) %>%
mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %>%
ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
ylab('Valor estandarizado')
}
trayectoria <- function(.data, vars, K, olas = 2016:2019, MISSING = TRUE, ...) {
seq <- TraMineR::seqdef(.data,
var = vars,
...,
weights = .data$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = MISSING)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
TraMineR::seqIplot(seq, group = stats::cutree(ward, k = K),
border = NA,
space = 0, idxs = 0, xtlab = olas)
TraMineR::seqdplot(seq, group = stats::cutree(ward, k = K),
border = NA,
space = 0)
}
comparar_clusters(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'))
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 3)
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 5)
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 6)
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 7)
# Agregar trayectoria de 6 clusters
seq <- TraMineR::seqdef(elsoc_salud_modelo,
var = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
weights = elsoc_salud_modelo$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
elsoc_salud_modelo$trayectoria_ocup <- factor(stats::cutree(ward, k = 6),
levels = c(3, 1, 4, 2, 5, 6),
labels = c('Ocupados estables',
'Pasan de inactividad a ocupacion',
'Ocupados con periodos sin ocupacion',
'Mayoritariamente inactivos',
'Mayoritariamente trabajo no remunerado',
'Mayoritariamente desempleados'))
comparar_clusters(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'))
trayectoria(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
olas = c(2016, 2018),
cpal = c('palevioletred3', 'palegreen3'),
K = 4)
trayectoria(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
olas = c(2016, 2018),
cpal = c('palevioletred3', 'palegreen3'),
K = 5)
trayectoria(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
olas = c(2016, 2018),
cpal = c('palevioletred3', 'palegreen3'),
K = 6)
elsoc_salud_modelo <- elsoc_salud
elsoc_salud_modelo$trayectoria_gmm.4lin <- factor(elsoc_salud %>%
left_join(lcmm4_lin$pprob %>% select(idencuesta, class),
by = 'idencuesta') %>%
pull(class),
levels = c(2, 1, 3, 4),
labels = c('Trayectoria asintomatica',
'Trayectoria sintomas moderados',
'Trayectoria de sintomas ascendente',
'Trayectoria sintomas severos persistentes'))
elsoc_salud_modelo$trayectoria_gmm.5lin <- factor(elsoc_salud %>%
left_join(lcmm5_lin$pprob %>% select(idencuesta, class),
by = 'idencuesta') %>%
pull(class),
levels = c(4, 5, 1, 2, 3),
labels = c('Trayectoria baja-media',
'Trayectoria media-moderada',
'Trayectoria descendente',
'Trayectoria ascendente',
'Trayectoria alta-moderada'))
elsoc_salud_modelo <- elsoc_salud_modelo %>%
filter(!elsoc::is_nsnr(m30_w01, m30_w02, m30_w03, m30_w04, m30b_w05)) %>%
mutate(
# Variables de ingreso:
m30_w01 = 1000*as.numeric(car::recode(m30_w01, "1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490;
8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935;
15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA")),
m29_w01_imp = ifelse(is_nsnr(m29_w01), m30_w01, m29_w01),
ypc_w01 = m29_w01_imp / nhogar1_w01,
m30_w02 = 1000*as.numeric(car::recode(m30_w02, "1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490;
8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935;
15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA")),
m29_w02_imp = ifelse(is_nsnr(m29_w02), m30_w02, m29_w02),
ypc_w02 = m29_w02_imp / nhogar1_w01,
m30_w03 = 1000*as.numeric(car::recode(m30_w03, "1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490;
8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935;
15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA")),
m29_w03_imp = ifelse(is_nsnr(m29_w03), m30_w03, m29_w03),
ypc_w03 = m29_w03_imp / ifelse(is_nsnr(m54_w03), NA, m54_w03),
m30_w04 = 1000*as.numeric(car::recode(m30_w04, "1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490;
8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935;
15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA")),
m29_w04_imp = ifelse(is_nsnr(m29_w04), m30_w04, m29_w04),
ypc_w04 = m29_w04_imp / ifelse(is_nsnr(m54_w04), NA, m54_w04),
log_ing = log((ypc_w01 + ypc_w02 + ypc_w03 + ypc_w04)/5),
quintil_w01 = statar::xtile(ypc_w01, n = 5, wt = ponderador02_w01),
quintil_w01 = factor(quintil_w01,
levels = 1:5,
labels = glue::glue('Quintil {1:5}')),
quintil_w02 = statar::xtile(ypc_w02, n = 5, wt = ponderador02_w02),
quintil_w02 = factor(quintil_w02,
levels = 1:5,
labels = glue::glue('Quintil {1:5}')),
quintil_w03 = statar::xtile(ypc_w03, n = 5, wt = ponderador02_w03),
quintil_w03 = factor(quintil_w03,
levels = 1:5,
labels = glue::glue('Quintil {1:5}')),
quintil_w04 = statar::xtile(ypc_w04, n = 5, wt = ponderador02_w04),
quintil_w04 = factor(quintil_w04,
levels = 1:5,
labels = glue::glue('Quintil {1:5}')),
# Nivel educacional:
educ_w01 = factor(car::recode(m01_w01, recodes = "1:3 = 1; 4:5 = 2; 6:7 = 3; 8:10 = 4"),
levels = 1:4,
labels = c("Basica", "Media", "Tecnica", "Universitaria")),
# Situacion ocupacional:
ocup_w01 = factor(car::recode(m02_w01, "1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4"),
levels = 1:4,
labels = c('Ocupado', 'Desempleado', 'Inactivo', 'Trabajo no remunerado')),
ocup_w02 = factor(car::recode(m02_w02, "1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4"),
levels = 1:4,
labels = c('Ocupado', 'Desempleado', 'Inactivo', 'Trabajo no remunerado')),
ocup_w03 = factor(car::recode(m02_w03, "1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4"),
levels = 1:4,
labels = c('Ocupado', 'Desempleado', 'Inactivo', 'Trabajo no remunerado')),
ocup_w04 = factor(car::recode(m02_w04, "1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4"),
levels = 1:4,
labels = c('Ocupado', 'Desempleado', 'Inactivo', 'Trabajo no remunerado')),
# Sobrecarga de deudas
sobrecarga_deuda_w01 = factor(car::recode(m43_w01, "1:2 = 1; 4:5 = 2; else = NA"),
labels = c('Nada/No muy sobrecargado',
'Bastante/Muy sobrecargado')),
sobrecarga_deuda_w03 = factor(car::recode(m43_w03, "1:2 = 1; 4:5 = 2; else = NA"),
labels = c('Nada/No muy sobrecargado',
'Bastante/Muy sobrecargado')),
# Apoyo social
apoyo_social_w01 = factor(car::recode(s12_w01, "1:2 = 1; 3:4 = 2; 5 = 3"),
levels = 1:3,
labels = c('Apoyo social bajo', 'Apoyo social medio', 'Apoyo social alto')),
apoyo_social_w03 = factor(car::recode(s12_w03, "1:2 = 1; 3:4 = 2; 5 = 3"),
levels = 1:3,
labels = c('Apoyo social bajo', 'Apoyo social medio', 'Apoyo social alto')),
# Actividad fisica regular
activ_fisica_w01 = factor(s04_w01 %in% 1:3,
labels = c('Sin actividad fisica regular', 'Con actividad fisica regular')),
activ_fisica_w03 = factor(s04_w03 %in% 1:3,
labels = c('Sin actividad fisica regular', 'Con actividad fisica regular')),
# Estado de salud
salud_w01 = factor(car::recode(s03_w01, "1 = 1; 2:3 = 2; 4:5 = 3; else = NA"),
labels = c('Mala', 'Regular/buena', 'Muy buena/excelente')),
salud_w02 = factor(car::recode(s03_w02, "1 = 1; 2:3 = 2; 4:5 = 3; else = NA"),
labels = c('Mala', 'Regular/buena', 'Muy buena/excelente')),
salud_w03 = factor(car::recode(s03_w03, "1 = 1; 2:3 = 2; 4:5 = 3; else = NA"),
labels = c('Mala', 'Regular/buena', 'Muy buena/excelente')),
salud_w04 = factor(car::recode(s03_w04, "1 = 1; 2:3 = 2; 4:5 = 3; else = NA"),
labels = c('Mala', 'Regular/buena', 'Muy buena/excelente')),
salud_w05 = factor(car::recode(s03_w05, "1 = 1; 2:3 = 2; 4:5 = 3; else = NA"),
labels = c('Mala', 'Regular/buena', 'Muy buena/excelente')),
# Fumador
fuma_w01 = factor(s08_w01 >= 1,
labels = c('No fuma', 'Fumador')),
fuma_w03 = factor(s08_w03 >= 1,
labels = c('No fuma', 'Fumador')),
# IMC
imc_w01 = ifelse(is_nsnr(s06_w01), NA, s06_w01) / (ifelse(is_nsnr(s05_w01), NA, s05_w01/100))^2,
imc_w03 = ifelse(is_nsnr(s06_w03), NA, s06_w03) / (ifelse(is_nsnr(s05_w03), NA, s05_w03/100))^2,
# Personalidad
s22_01_w02 = ifelse(is_nsnr(s22_01_w02), NA, s22_01_w02),
s22_02_w02 = ifelse(is_nsnr(s22_02_w02), NA, s22_02_w02),
s22_03_w02 = ifelse(is_nsnr(s22_03_w02), NA, s22_03_w02),
s22_04_w02 = ifelse(is_nsnr(s22_04_w02), NA, s22_04_w02),
s22_05_w02 = ifelse(is_nsnr(s22_05_w02), NA, s22_05_w02),
s22_06_w02 = ifelse(is_nsnr(s22_06_w02), NA, s22_06_w02),
s22_07_w02 = ifelse(is_nsnr(s22_07_w02), NA, s22_07_w02),
s22_08_w02 = ifelse(is_nsnr(s22_08_w02), NA, s22_08_w02),
s22_09_w02 = ifelse(is_nsnr(s22_09_w02), NA, s22_09_w02),
s22_10_w02 = ifelse(is_nsnr(s22_10_w02), NA, s22_10_w02),
extraversion_w02 = 6 - (s22_01_w02) + s22_06_w02 ,
agreeableness_w02 = s22_02_w02 + 6 - s22_07_w02,
conscientiousness_w02 = 6 - s22_03_w02 + s22_08_w02 ,
neuroticism_w02 = 6 - s22_04_w02 + s22_09_w02,
openness_w02 = 6 - s22_05_w02 + s22_10_w02,
# Direccion vida
proyecto_vida_w03 = factor(s30_01_w03 %in% 4:5,
labels = c('No decidido direccion de vida', 'Decidido direccion de vida')),
# Desigualdad percibida
percepcion_desigualdad_w01 = factor(c18_11_w01 %in% 4:5,
labels = c('Desigualdad no muy grande', 'Desigualdad muy grande')),
percepcion_desigualdad_w02 = factor(c18_11_w02 %in% 4:5,
labels = c('Desigualdad no muy grande', 'Desigualdad muy grande')),
percepcion_desigualdad_w03 = factor(c18_11_w03 %in% 4:5,
labels = c('Desigualdad no muy grande', 'Desigualdad muy grande')),
percepcion_desigualdad_w04 = factor(c18_11_w04 %in% 4:5,
labels = c('Desigualdad no muy grande', 'Desigualdad muy grande')),
# Estresores:
estresor_01_w01 = s13_01_w01 == 1,
estresor_02_w01 = s13_02_w01 == 1,
estresor_03_w01 = s13_03_w01 == 1,
estresor_04_w01 = s13_04_w01 == 1,
estresor_06_w01 = s13_06_w01 == 1,
estresor_01_w03 = s13_01_w03 == 1,
estresor_02_w03 = s13_02_w03 == 1,
estresor_03_w03 = s13_03_w03 == 1,
estresor_04_w03 = s13_04_w03 == 1,
estresor_06_w03 = s13_06_w03 == 1,
estresor_n_w01 = estresor_01_w01 + estresor_02_w01 + estresor_03_w01 + estresor_04_w01 + estresor_06_w01,
estresor_n_w03 = estresor_01_w03 + estresor_02_w03 + estresor_03_w03 + estresor_04_w03 + estresor_06_w03,
estresor_n = estresor_n_w01 + estresor_n_w03
)
comparar_clusters <- function(.data, vars, K = 10) {
seq <- TraMineR::seqdef(.data,
var = vars,
weights = .data$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
# Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters)
ward.range <- WeightedCluster::as.clustrange(ward, diss = dist, ncluster = K)
# Visualizar clusters:
ward.range$stats %>%
mutate(clusters = 2:10) %>%
pivot_longer(cols = c(ASWw, HG, PBC, HC),
names_to = 'indicador',
values_to = 'value') %>%
group_by(indicador) %>%
mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %>%
ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) +
geom_line() +
scale_x_continuous(breaks = 2:10) +
ylab('Valor estandarizado')
}
trayectoria <- function(.data, vars, K, olas = 2016:2019, MISSING = TRUE, ...) {
seq <- TraMineR::seqdef(.data,
var = vars,
...,
weights = .data$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = MISSING)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
TraMineR::seqIplot(seq, group = stats::cutree(ward, k = K),
border = NA,
space = 0, idxs = 0, xtlab = olas)
TraMineR::seqdplot(seq, group = stats::cutree(ward, k = K),
border = NA,
space = 0)
}
comparar_clusters(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'))
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 3)
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 5)
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 6)
trayectoria(elsoc_salud_modelo,
vars = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
cpal = c('palevioletred3', 'khaki3', 'steelblue3', 'palegreen3'),
K = 7)
# Agregar trayectoria de 6 clusters
seq <- TraMineR::seqdef(elsoc_salud_modelo,
var = c('ocup_w01', 'ocup_w02', 'ocup_w03', 'ocup_w04'),
weights = elsoc_salud_modelo$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
elsoc_salud_modelo$trayectoria_ocup <- factor(stats::cutree(ward, k = 6),
levels = c(3, 1, 4, 2, 5, 6),
labels = c('Ocupados estables',
'Pasan de inactividad a ocupacion',
'Ocupados con periodos sin ocupacion',
'Mayoritariamente inactivos',
'Mayoritariamente trabajo no remunerado',
'Mayoritariamente desempleados'))
comparar_clusters(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'))
trayectoria(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
olas = c(2016, 2018),
cpal = c('palevioletred3', 'palegreen3'),
K = 4)
trayectoria(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
olas = c(2016, 2018),
cpal = c('palevioletred3', 'palegreen3'),
K = 5)
trayectoria(elsoc_salud_modelo,
vars = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
olas = c(2016, 2018),
cpal = c('palevioletred3', 'palegreen3'),
K = 6)
# Agregar trayectoria de 3 clusters
seq <- TraMineR::seqdef(elsoc_salud_modelo,
var = c('sobrecarga_deuda_w01', 'sobrecarga_deuda_w03'),
weights = elsoc_salud_modelo$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
elsoc_salud_modelo$trayectoria_deuda <- factor(stats::cutree(ward, k = 5),
levels = c(4, 3, 1, 2),
labels = c('Nada/No muy sobrecargados deuda',
'Reduccion sobrecarga deuda',
'Aumento sobrecarga deuda',
'Bastante/muy sobrecargados deuda'))
comparar_clusters(elsoc_salud_modelo,
vars = c('activ_fisica_w01', 'activ_fisica_w03'))
trayectoria(elsoc_salud_modelo,
vars = c('activ_fisica_w01', 'activ_fisica_w03'),
olas = c(2016, 2018),
cpal = c('palegreen3', 'palevioletred3'),
K = 2)
trayectoria(elsoc_salud_modelo,
vars = c('activ_fisica_w01', 'activ_fisica_w03'),
olas = c(2016, 2018),
cpal = c('palegreen3', 'palevioletred3'),
K = 4)
trayectoria(elsoc_salud_modelo,
vars = c('activ_fisica_w01', 'activ_fisica_w03'),
olas = c(2016, 2018),
cpal = c('palegreen3', 'palevioletred3'),
K = 5)
# Agregar trayectoria de 3 clusters
seq <- TraMineR::seqdef(elsoc_salud_modelo,
var = c('activ_fisica_w01', 'activ_fisica_w03'),
weights = elsoc_salud_modelo$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
elsoc_salud_modelo$trayectoria_activ_fisica <- factor(stats::cutree(ward, k = 4),
levels = c(2, 3, 4, 1),
labels = c('Sin actividad fisica persistente',
'Abandonan actividad fisica en 2021',
'Se activan en 2021',
'Con actividad fisica persistente'))
comparar_clusters(elsoc_salud_modelo,
vars = c('apoyo_social_w01', 'apoyo_social_w03'))
trayectoria(elsoc_salud_modelo,
vars = c('apoyo_social_w01', 'apoyo_social_w03'),
cpal = c('palegreen3', 'palevioletred3', 'khaki3'),
olas = c(2016, 2018),
K = 4)
trayectoria(elsoc_salud_modelo,
vars = c('apoyo_social_w01', 'apoyo_social_w03'),
cpal = c('palegreen3', 'palevioletred3', 'khaki3'),
olas = c(2016, 2018),
K = 5)
# Agregar trayectoria de 3 clusters
seq <- TraMineR::seqdef(elsoc_salud_modelo,
var = c('apoyo_social_w01', 'apoyo_social_w03'),
weights = elsoc_salud_modelo$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
elsoc_salud_modelo$trayectoria_apoyo_social <- factor(stats::cutree(ward, k = 5),
levels = c(5, 4, 2, 1, 3),
labels = c('Apoyo social estable',
'Apoyo social/decreciente',
'Apoyo social medio',
'Apoyo social cambiante',
'Sin apoyo social'))
comparar_clusters(elsoc_salud_modelo,
vars = c('salud_w01', 'salud_w02', 'salud_w03', 'salud_w04', 'salud_w05'))
trayectoria(elsoc_salud_modelo,
vars = c('salud_w01', 'salud_w02', 'salud_w03', 'salud_w04', 'salud_w05'),
cpal = c('palevioletred3', 'palegreen3', 'khaki3'),
K = 3)
trayectoria(elsoc_salud_modelo,
vars = c('salud_w01', 'salud_w02', 'salud_w03', 'salud_w04', 'salud_w05'),
cpal = c('palevioletred3', 'palegreen3', 'khaki3'),
K = 4)
trayectoria(elsoc_salud_modelo,
vars = c('salud_w01', 'salud_w02', 'salud_w03', 'salud_w04', 'salud_w05'),
cpal = c('palevioletred3', 'palegreen3', 'khaki3'),
K = 5)
# Agregar trayectoria de 3 clusters
seq <- TraMineR::seqdef(elsoc_salud_modelo,
var = c('salud_w01', 'salud_w02', 'salud_w03', 'salud_w04', 'salud_w05'),
weights = elsoc_salud_modelo$ponderador02_w01)
dist <- TraMineR::seqdist(seq,
method = "LCS",
with.missing = TRUE)
ward <- cluster::agnes(dist, diss = TRUE, method = 'ward')
elsoc_salud_modelo$trayectoria_salud <- factor(stats::cutree(ward, k = 4),
levels = c(4, 3, 2, 1),
labels = c('Salud subjetiva muy buena',
'Salud subjetiva regular/muy buena',
'Salud subjetiva regular',
'Salud subjetiva mala/regular'))
save(elsoc_salud_modelo, file = 'datos_salud_modelo.RData')
load('datos_salud_modelo.RData')
sjmisc::frq(elsoc_salud_modelo$estresor_n)
with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_gmm.4lin, trayectoria_gmm.5lin, bias.correct = TRUE))
m1 <- elsoc_salud_modelo %>%
sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %>%
nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup,
data = ., weights = ponderador02_w01, quiet = TRUE)
m2 <- elsoc_salud_modelo %>%
sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %>%
nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + proyecto_vida_w03 + estresor_n_w01 + estresor_n_w03,
data = ., weights = ponderador02_w01, quiet = TRUE)
m3 <- elsoc_salud_modelo %>%
sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %>%
nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + proyecto_vida_w03 + estresor_n_w01 + estresor_n_w03 + extraversion_w02 + agreeableness_w02 + conscientiousness_w02 + neuroticism_w02 + openness_w02,
data = ., weights = ponderador02_w01, quiet = TRUE)
modelsummary::modelsummary(list(m1, m2, m3),
estimate = "{estimate}{stars}",
statistic = NULL,
stars = c('*' = .1, '**' = .05, '***' = .01),
shape = term + response ~ model,
exponentiate = TRUE)
m3 <- elsoc_salud_modelo %>%
sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %>%
nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + proyecto_vida_w03 + estresor_n + extraversion_w02 + agreeableness_w02 + conscientiousness_w02 + neuroticism_w02 + openness_w02,
data = ., weights = ponderador02_w01, quiet = TRUE)
em3 <- marginaleffects(m3, type = "probs",  conf_level = .95) %>%
summary() %>%
mutate(term = paste0(term, contrast))
em3 %>%
filter(term %in% c('m0_sexo_w01Mujer - Hombre', 'm0_edad_w01dY/dX', 'log_ingdY/dX', 'proyecto_vida_w03Decidido direccion de vida - No decidido direccion de vida', 'estresor_n_dY/dX')) %>%
mutate(term = factor(term,
levels = c('m0_sexo_w01Mujer - Hombre', 'm0_edad_w01dY/dX', 'log_ingdY/dX', 'proyecto_vida_w03Decidido direccion de vida - No decidido direccion de vida', 'estresor_n_w01dY/dX', 'estresor_n_w03dY/dX'),
labels = c('Sexo (mujer=1)', 'Edad', 'Log(ing)',
'Decidido direccion\nde vida', 'N estresores (2016)', 'N estresores (2018)')),
group = gsub('Trayectoria sintomas', 'Trayectoria sintomas\n', group)) %>%
ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) +
geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high),
position = position_dodgev(height = 0.75)) +
geom_vline(xintercept = 0, linetype = 2, alpha = .5) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
theme(legend.position = 'top') +
theme(legend.title = element_blank()) +
xlab('Probabilidad predicha') +
ylab(NULL)
View(em3)
em3 %>%
filter(term %in% c('m0_sexo_w01Mujer - Hombre', 'm0_edad_w01dY/dX', 'log_ingdY/dX', 'proyecto_vida_w03Decidido direccion de vida - No decidido direccion de vida', 'estresor_ndY/dX')) %>%
mutate(term = factor(term,
levels = c('m0_sexo_w01Mujer - Hombre', 'm0_edad_w01dY/dX', 'log_ingdY/dX', 'proyecto_vida_w03Decidido direccion de vida - No decidido direccion de vida', 'estresor_ndY/dX'),
labels = c('Sexo (mujer=1)', 'Edad', 'Log(ing)',
'Decidido direccion\nde vida', 'N estresores')),
group = gsub('Trayectoria sintomas', 'Trayectoria sintomas\n', group)) %>%
ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) +
geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high),
position = position_dodgev(height = 0.75)) +
geom_vline(xintercept = 0, linetype = 2, alpha = .5) +
scale_color_discrete(guide = guide_legend(reverse = TRUE)) +
theme(legend.position = 'top') +
theme(legend.title = element_blank()) +
xlab('Probabilidad predicha') +
ylab(NULL)
# Librerías básicas
library(tidyverse)
library(sjlabelled)
# Librería ELSOC
library(elsoc)
# Cargar datos ELSOC:
# elsoc::load_elsoc(data = 'wide')
load(file.path('..', 'inputs', 'ELSOC_Wide_2016_2021_v1.00_R.RData'))
# Cargar datos ELSOC:
elsoc::load_elsoc(data = 'wide')
source("C:/Users/edgar/Dropbox/investigaciones_y_trabajos/Salud mental/trayectorias-salud-mental/processing/preparacion_datos.R", echo=TRUE)
save(elsoc_salud, elsoc_salud_long,
file = file.path('..', 'inputs', 'elsoc_preparada.RData'))
source("C:/Users/edgar/Dropbox/investigaciones_y_trabajos/Salud mental/trayectorias-salud-mental/processing/preparacion_datos.R", echo=TRUE)
load(file.path('..', 'inputs', 'datos_elsoc_preparados.RData'))
load(file.path('..', 'inputs', 'modelos_lcmm.RData'))
# Librerías básicas
library(tidyverse)
?nnet
