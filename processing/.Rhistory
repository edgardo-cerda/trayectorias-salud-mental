legend.title = element_blank()) +
scale_fill_viridis_d(direction = -1, end = .8))
plot <- ggpubr::ggarrange(plotlist = graficos,
common.legend = TRUE, legend = 'bottom')
annotate_figure(plot, top = text_grob(glue::glue('{K} clusters')))
}
purrr::map(.x = 2, ward = ward.depr2, .f = grafico_trayectorias2_K)
purrr::map(.x = 2, ward = ward.depr2, .f = grafico_trayectorias2_K)
elsoc_trayectorias <- elsoc_salud
elsoc_trayectorias$trayectoria <- stats::cutree(ward.depr2, k = 2)
elsoc_trayectorias %>%
filter(trayectoria == 1) %>%
ggsankey::make_long(depr2_w01, depr2_w02, depr2_w03, depr2_w04, depr2_w05,
value = 'ponderador02_w01')
mutate(depr = factor(node,
levels = 1:2,
labels = c('Sin sintomas/medios', 'Síntomas moderados/severos')),
x = factor(x,
levels = glue::glue('depr2_w0{1:5}'),
labels = glue::glue('{c(2016:2019, 2021)}')))
grafico_trayectorias4_K <- function(K, ward) {
elsoc_trayectorias <- elsoc_salud
elsoc_trayectorias$trayectoria <- stats::cutree(ward, k = K)
nested_data <- elsoc_trayectorias %>%
group_by(trayectoria) %>%
nest()
N <- purrr::map(.x = nested_data$data, .f = ~dim(.x)[1])
graficos <- purrr::map2(.x = nested_data$data,
.y = N,
.f = ~ .x %>%
ggsankey::make_long(depr4_w01, depr4_w02, depr4_w03, depr4_w04, depr4_w05,
value = 'ponderador02_w01') %>%
mutate(depr = factor(node,
levels = 1:4,
labels = c('Sin sintomas', 'medios', 'moderados', 'severos')),
x = factor(x,
levels = glue::glue('depr4_w0{1:5}'),
labels = glue::glue('{c(2016:2019, 2021)}'))) %>%
ggplot(aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = depr,
value = value)) +
geom_sankey(flow.alpha = .6) +
labs(x = NULL,
caption = glue::glue('N={.y}')) +
theme(legend.position = 'bottom',
legend.title = element_blank()) +
scale_fill_viridis_d(direction = -1, end = .8,
breaks = c('Sin sintomas', 'medios',
'moderados', 'severos')))
plot <- ggpubr::ggarrange(plotlist = graficos,
common.legend = TRUE, legend = 'bottom')
annotate_figure(plot, top = text_grob(glue::glue('{K} clusters')))
}
purrr::map(.x = 5, ward = ward.depr4, .f = grafico_trayectorias4_K)
?scale_fill_viridis_d
purrr::map(.x = 5, ward = ward.depr4, .f = grafico_trayectorias4_K)
grafico_trayectorias4_K <- function(K, ward) {
elsoc_trayectorias <- elsoc_salud
elsoc_trayectorias$trayectoria <- stats::cutree(ward, k = K)
nested_data <- elsoc_trayectorias %>%
group_by(trayectoria) %>%
nest()
N <- purrr::map(.x = nested_data$data, .f = ~dim(.x)[1])
graficos <- purrr::map2(.x = nested_data$data,
.y = N,
.f = ~ .x %>%
ggsankey::make_long(depr4_w01, depr4_w02, depr4_w03, depr4_w04, depr4_w05,
value = 'ponderador02_w01') %>%
mutate(depr = factor(node,
levels = 1:4,
labels = c('Sin sintomas', 'medios', 'moderados', 'severos')),
x = factor(x,
levels = glue::glue('depr4_w0{1:5}'),
labels = glue::glue('{c(2016:2019, 2021)}'))) %>%
ggplot(aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = depr,
value = value)) +
geom_sankey(flow.alpha = .6) +
labs(x = NULL,
caption = glue::glue('N={.y}')) +
theme(legend.position = 'bottom',
legend.title = element_blank()) +
scale_fill_viridis_d(direction = -1, end = .8,
drop = FALSE))
plot <- ggpubr::ggarrange(plotlist = graficos,
common.legend = TRUE, legend = 'bottom')
annotate_figure(plot, top = text_grob(glue::glue('{K} clusters')))
}
purrr::map(.x = 5, ward = ward.depr4, .f = grafico_trayectorias4_K)
# Análisis de secuencia
## Secuencia con 4 categorías:
```{r}
install.packages('lcmm')
install.packages('lcmm')
install.packages('lcmm')
?hlme
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Librerías básicas
library(tidyverse)
library(sjlabelled)
# Librerias análisis de secuencia
library(TraMineR)
library(TraMineRextras)
library(WeightedCluster)
library(cluster)
# Librería ELSOC
library(elsoc)
# Librerias graficos
library(ggpubr)
library(ggsankey)
# Libreria analisis estadístico
library(nnet)
library(modelsummary)
library(lcmm)
# Cargar datos ELSOC:
elsoc::load_elsoc(data = 'wide')
# Crear variables de sintomatología depresiva por ola:
elsoc_salud <- elsoc_wide_2016_2021 %>%
# Se conservan observaciones presentes en las 5 olas
filter(tipo_atricion == 1) %>%
# Crear variables de PHQ9
purrr::map_at(.at = vars(starts_with('s11_0')),
.f = function(s) car::recode(s, "1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA")) %>%
as.data.frame() %>%
mutate(phq9_w01 = (s11_01_w01 + s11_02_w01 + s11_03_w01 + s11_04_w01 + s11_05_w01 + s11_06_w01 + s11_07_w01 + s11_08_w01 + s11_09_w01),
phq9_w02 = (s11_01_w02 + s11_02_w02 + s11_03_w02 + s11_04_w02 + s11_05_w02 + s11_06_w02 + s11_07_w02 + s11_08_w02 + s11_09_w02),
phq9_w03 = (s11_01_w03 + s11_02_w03 + s11_03_w03 + s11_04_w03 + s11_05_w03 + s11_06_w03 + s11_07_w03 + s11_08_w03 + s11_09_w03),
phq9_w04 = (s11_01_w04 + s11_02_w04 + s11_03_w04 + s11_04_w04 + s11_05_w04 + s11_06_w04 + s11_07_w04 + s11_08_w04 + s11_09_w04),
phq9_w05 = (s11_01_w05 + s11_02_w05 + s11_03_w05 + s11_04_w05 + s11_05_w05 + s11_06_w05 + s11_07_w05 + s11_08_w05 + s11_09_w05)) %>%
# Quitar NAs
filter(!is.na(phq9_w01), !is.na(phq9_w02), !is.na(phq9_w03), !is.na(phq9_w04), !is.na(phq9_w05)) %>%
# Crear indicador de depresión en 4 y en 2 categorías:
mutate(depr4_w01 = car::recode(phq9_w01, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w02 = car::recode(phq9_w02, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w03 = car::recode(phq9_w03, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w04 = car::recode(phq9_w04, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w05 = car::recode(phq9_w05, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr2_w01 = car::recode(phq9_w01, "0:9 = 0; 10:27 = 1"),
depr2_w02 = car::recode(phq9_w02, "0:9 = 0; 10:27 = 1"),
depr2_w03 = car::recode(phq9_w03, "0:9 = 0; 10:27 = 1"),
depr2_w04 = car::recode(phq9_w04, "0:9 = 0; 10:27 = 1"),
depr2_w05 = car::recode(phq9_w05, "0:9 = 0; 10:27 = 1"),
phq_sum = phq9_w01 + phq9_w02 + phq9_w03 + phq9_w04 + phq9_w05
)
# Cargar datos ELSOC LONG:
elsoc::load_elsoc(data = 'long')
# Crear variables de sintomatología depresiva por ola LONG:
elsoc_salud_long <- elsoc_long_2016_2021 %>%
# Se conservan observaciones presentes en las 5 olas
filter(tipo_atricion == 1) %>%
# Crear variables de PHQ9
purrr::map_at(.at = vars(starts_with('s11_0')),
.f = function(s) car::recode(s, "1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA")) %>%
as.data.frame() %>%
mutate(phq9 = (s11_01 + s11_02 + s11_03 + s11_04 + s11_05 + s11_06 + s11_07 + s11_08 + s11_09)) %>%
# Quitar NAs
filter(!is.na(phq9)) %>%
# Crear indicador de depresión en 4 y en 2 categorías:
mutate(depr4 = car::recode(phq9, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr2 = car::recode(phq9, "0:9 = 0; 10:27 = 1"))
set.seed(123)
# using the 1-class model to set initial start values:
lcga1_lin <- hlme(phq9 ~ ola, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_lin <- gridsearch(rep = 30, maxiter = 30, minit = lcga1,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola))
# using the 1-class model to set initial start values:
lcga1_lin <- hlme(phq9 ~ ola, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_lin <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola))
lcga3_lin <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 3,
data = elsoc_salud_long, mixture = ~ ola))
lcga4_lin <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 4,
data = elsoc_salud_long, mixture = ~ ola))
lcga5_lin <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 5,
data = elsoc_salud_long, mixture = ~ ola))
lcga1_quad <- hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_quad <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_quad,
hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola + ola^2))
lcga3_quad <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_quad,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 3,
data = elsoc_salud_long, mixture = ~ ola + ola^2))
lcga4_quad <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_quad,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 4,
data = elsoc_salud_long, mixture = ~ ola + ola^2))
lcga5_quad <- gridsearch(rep = 30, maxiter = 30, minit = lcga1_quad,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 5,
data = elsoc_salud_long, mixture = ~ ola + ola^2))
# make table with results for the 10 models:
summarytable(lcga1_lin, lcga2_lin, lcga3_lin, lcga4_lin, lcga5_lin)
summarytable(lcga1_quad, lcga2_quad, lcga3_quad, lcga4_quad, lcga5_quad)
summary(lcga3_lin)
# using the 1-class model to set initial start values:
lcga1_lin <- hlme(phq9 ~ ola, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola))
lcga2_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola + m0_sexo, subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola))
lcga2_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola + factor(m0_sexo), subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola))
lcga2_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola , subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
summary(lcga2_lin)
lcga1_quad <- hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 1,
data = elsoc_salud_long, classmb = ~ m0_sexo)
# using the 1-class model to set initial start values:
lcga1_lin <- hlme(phq9 ~ ola, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola , subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
lcga3_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 3,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
lcga4_lin <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 4,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
lcga1_quad <- hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_quad <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola + ola^2,
classmb = ~ m0_sexo))
lcga3_quad <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 3,
data = elsoc_salud_long, mixture = ~ ola + ola^2,
classmb = ~ m0_sexo))
lcga4_quad <- gridsearch(rep = 30, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 4,
data = elsoc_salud_long, mixture = ~ ola + ola^2,
classmb = ~ m0_sexo))
# make table with results for the 10 models:
summarytable(lcga1_lin, lcga2_lin, lcga3_lin, lcga4_lin, lcga5_lin)
summarytable(lcga1_quad, lcga2_quad, lcga3_quad, lcga4_quad, lcga5_quad)
summary(lcga4_lin)
summary(lcga4_quad)
summary(lcga4_lin)
summary(lcga5_lin)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Librerías básicas
library(tidyverse)
library(sjlabelled)
# Librerias análisis de secuencia
library(TraMineR)
library(TraMineRextras)
library(WeightedCluster)
library(cluster)
# Librería ELSOC
library(elsoc)
# Librerias graficos
library(ggpubr)
library(ggsankey)
# Libreria analisis estadístico
library(nnet)
library(modelsummary)
library(lcmm)
# Cargar datos ELSOC:
elsoc::load_elsoc(data = 'wide')
# Crear variables de sintomatología depresiva por ola:
elsoc_salud <- elsoc_wide_2016_2021 %>%
# Se conservan observaciones presentes en las 5 olas
filter(tipo_atricion == 1) %>%
# Crear variables de PHQ9
purrr::map_at(.at = vars(starts_with('s11_0')),
.f = function(s) car::recode(s, "1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA")) %>%
as.data.frame() %>%
mutate(phq9_w01 = (s11_01_w01 + s11_02_w01 + s11_03_w01 + s11_04_w01 + s11_05_w01 + s11_06_w01 + s11_07_w01 + s11_08_w01 + s11_09_w01),
phq9_w02 = (s11_01_w02 + s11_02_w02 + s11_03_w02 + s11_04_w02 + s11_05_w02 + s11_06_w02 + s11_07_w02 + s11_08_w02 + s11_09_w02),
phq9_w03 = (s11_01_w03 + s11_02_w03 + s11_03_w03 + s11_04_w03 + s11_05_w03 + s11_06_w03 + s11_07_w03 + s11_08_w03 + s11_09_w03),
phq9_w04 = (s11_01_w04 + s11_02_w04 + s11_03_w04 + s11_04_w04 + s11_05_w04 + s11_06_w04 + s11_07_w04 + s11_08_w04 + s11_09_w04),
phq9_w05 = (s11_01_w05 + s11_02_w05 + s11_03_w05 + s11_04_w05 + s11_05_w05 + s11_06_w05 + s11_07_w05 + s11_08_w05 + s11_09_w05)) %>%
# Quitar NAs
filter(!is.na(phq9_w01), !is.na(phq9_w02), !is.na(phq9_w03), !is.na(phq9_w04), !is.na(phq9_w05)) %>%
# Crear indicador de depresión en 4 y en 2 categorías:
mutate(depr4_w01 = car::recode(phq9_w01, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w02 = car::recode(phq9_w02, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w03 = car::recode(phq9_w03, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w04 = car::recode(phq9_w04, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w05 = car::recode(phq9_w05, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr2_w01 = car::recode(phq9_w01, "0:9 = 0; 10:27 = 1"),
depr2_w02 = car::recode(phq9_w02, "0:9 = 0; 10:27 = 1"),
depr2_w03 = car::recode(phq9_w03, "0:9 = 0; 10:27 = 1"),
depr2_w04 = car::recode(phq9_w04, "0:9 = 0; 10:27 = 1"),
depr2_w05 = car::recode(phq9_w05, "0:9 = 0; 10:27 = 1"),
phq_sum = phq9_w01 + phq9_w02 + phq9_w03 + phq9_w04 + phq9_w05
)
# Cargar datos ELSOC LONG:
elsoc::load_elsoc(data = 'long')
# Crear variables de sintomatología depresiva por ola LONG:
elsoc_salud_long <- elsoc_long_2016_2021 %>%
# Se conservan observaciones presentes en las 5 olas
filter(tipo_atricion == 1) %>%
# Crear variables de PHQ9
purrr::map_at(.at = vars(starts_with('s11_0')),
.f = function(s) car::recode(s, "1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA")) %>%
as.data.frame() %>%
mutate(phq9 = (s11_01 + s11_02 + s11_03 + s11_04 + s11_05 + s11_06 + s11_07 + s11_08 + s11_09)) %>%
# Quitar NAs
filter(!is.na(phq9)) %>%
# Crear indicador de depresión en 4 y en 2 categorías:
mutate(depr4 = car::recode(phq9, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr2 = car::recode(phq9, "0:9 = 0; 10:27 = 1"))
set.seed(123)
lcga1_quad <- hlme(phq9 ~ ola + ola^2, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
View(lcga1_quad)
summary(lcga1_quad)
lcga1_quad <- hlme(phq9 ~ ola + I(ola)^2, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
summary(lcga1_quad)
lcga1_quad <- hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
summary(lcga1_quad)
# using the 1-class model to set initial start values:
lcga1_lin <- hlme(phq9 ~ ola, subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_lin <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola , subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
lcga3_lin <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 3,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
lcga4_lin <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_lin,
hlme(phq9 ~ ola, subject = "idencuesta", ng = 4,
data = elsoc_salud_long, mixture = ~ ola,
classmb = ~ m0_sexo))
lcga1_quad <- hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_quad <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola + I(ola^2),
classmb = ~ m0_sexo))
lcga3_quad <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 3,
data = elsoc_salud_long, mixture = ~ ola + I(ola^2),
classmb = ~ m0_sexo))
lcga4_quad <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 4,
data = elsoc_salud_long, mixture = ~ ola + I(ola^2),
classmb = ~ m0_sexo))
# make table with results for the 10 models:
summarytable(lcga1_lin, lcga2_lin, lcga3_lin, lcga4_lin)
summarytable(lcga1_quad, lcga2_quad, lcga3_quad, lcga4_quad)
summary(lcga1_lin)
View(lcga1_lin)
summary(lcga4_lin)
summary(lcga4_quad)
knitr::opts_chunk$set(echo = TRUE)
library(elsoc)
?load_elsoc
?elsoc::survey_design_elsoc
elsoc_long_2016_2021 %>%
survey_design_elsoc(ids = NULL)
survey_design_elsoc(ids = 1)
survey_design_elsoc(ids = NA)
elsoc_long_2016_2021 %>%
mutate(uno = 1) %>%
survey_design_elsoc(ids = 'uno', strata = 'uno')
elsoc_long_2016_2021 %>%
mutate(uno = 1) %>%
survey_design_elsoc(ids = 'uno', strata = 'uno', weights = 'uno')
elsoc_long_2016_2021 %>%
mutate(uno = 1) %>%
survey_design_elsoc(ids = 'uno', strata = 'uno', weights = uno)
elsoc_long_2016_2021 %>%
mutate(uno = 1) %>%
survey_design_elsoc(ids = 'uno', strata = 'uno', weights = 1)
elsoc_long_2016_2021 %>%
srvyr::as_survey()
elsoc_long_2016_2021 %>%
srvyr::as_survey(strata = NULL)
elsoc_long_2016_2021 %>%
srvyr::as_survey(strata = NULL)
elsoc_long_2016_2021 %>%
srvyr::as_survey(ids = NULL, strata = NULL)
x <- elsoc_long_2016_2021 %>%
srvyr::as_survey(ids = NULL, strata = NULL)
x <- elsoc_long_2016_2021 %>%
srvyr::as_survey(strata = NULL)
x <- elsoc_long_2016_2021 %>%
srvyr::as_survey(weights = NULL)
elsoc_long_2016_2021 %>%
srvyr::as_survey(weights = NULL)
elsoc_long_2016_2021 %>%
srvyr::as_survey(weights = NULL) %>%
prop(c01)
?random
base_ejemplo(x = 1:100,
y = runif(100))
base_ejemplo <- data.frame(x = 1:100,
y = runif(100))
base_ejemplo %>%
srvyr::as_survey() %>%
prop(y)
base_ejemplo <- data.frame(x = rep(c(1, 2), each = 50),
y = runif(100))
View(base_ejemplo)
base_ejemplo %>%
srvyr::as_survey() %>%
prop(y > .5, by = x)
source("~/.active-rstudio-document", echo=TRUE)
elsoc_wide_2016_2021 %>%
elsoc::survey_design_elsoc(weights = ponderador02_w01)
elsoc_wide_2016_2021 %>%
elsoc::survey_design_elsoc(weights = ponderador02_w01) %>%
prop(c01_w01)
elsoc_wide_2016_2021 %>%
elsoc::survey_design_elsoc(weights = 'ponderador02_w01') %>%
prop(c01_w01)
?srvyr::as_survey
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Librerías básicas
library(tidyverse)
library(sjlabelled)
# Librerias análisis de secuencia
library(TraMineR)
library(TraMineRextras)
library(WeightedCluster)
library(cluster)
# Librería ELSOC
library(elsoc)
# Librerias graficos
library(ggpubr)
library(ggsankey)
# Libreria analisis estadístico
library(nnet)
library(modelsummary)
library(lcmm)
# Cargar datos ELSOC:
elsoc::load_elsoc(data = 'wide')
# Crear variables de sintomatología depresiva por ola:
elsoc_salud <- elsoc_wide_2016_2021 %>%
# Se conservan observaciones presentes en las 5 olas
filter(tipo_atricion == 1) %>%
# Crear variables de PHQ9
purrr::map_at(.at = vars(starts_with('s11_0')),
.f = function(s) car::recode(s, "1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA")) %>%
as.data.frame() %>%
mutate(phq9_w01 = (s11_01_w01 + s11_02_w01 + s11_03_w01 + s11_04_w01 + s11_05_w01 + s11_06_w01 + s11_07_w01 + s11_08_w01 + s11_09_w01),
phq9_w02 = (s11_01_w02 + s11_02_w02 + s11_03_w02 + s11_04_w02 + s11_05_w02 + s11_06_w02 + s11_07_w02 + s11_08_w02 + s11_09_w02),
phq9_w03 = (s11_01_w03 + s11_02_w03 + s11_03_w03 + s11_04_w03 + s11_05_w03 + s11_06_w03 + s11_07_w03 + s11_08_w03 + s11_09_w03),
phq9_w04 = (s11_01_w04 + s11_02_w04 + s11_03_w04 + s11_04_w04 + s11_05_w04 + s11_06_w04 + s11_07_w04 + s11_08_w04 + s11_09_w04),
phq9_w05 = (s11_01_w05 + s11_02_w05 + s11_03_w05 + s11_04_w05 + s11_05_w05 + s11_06_w05 + s11_07_w05 + s11_08_w05 + s11_09_w05)) %>%
# Quitar NAs
filter(!is.na(phq9_w01), !is.na(phq9_w02), !is.na(phq9_w03), !is.na(phq9_w04), !is.na(phq9_w05)) %>%
# Crear indicador de depresión en 4 y en 2 categorías:
mutate(depr4_w01 = car::recode(phq9_w01, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w02 = car::recode(phq9_w02, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w03 = car::recode(phq9_w03, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w04 = car::recode(phq9_w04, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr4_w05 = car::recode(phq9_w05, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr2_w01 = car::recode(phq9_w01, "0:9 = 0; 10:27 = 1"),
depr2_w02 = car::recode(phq9_w02, "0:9 = 0; 10:27 = 1"),
depr2_w03 = car::recode(phq9_w03, "0:9 = 0; 10:27 = 1"),
depr2_w04 = car::recode(phq9_w04, "0:9 = 0; 10:27 = 1"),
depr2_w05 = car::recode(phq9_w05, "0:9 = 0; 10:27 = 1"),
phq_sum = phq9_w01 + phq9_w02 + phq9_w03 + phq9_w04 + phq9_w05
)
# Cargar datos ELSOC LONG:
elsoc::load_elsoc(data = 'long')
# Crear variables de sintomatología depresiva por ola LONG:
elsoc_salud_long <- elsoc_long_2016_2021 %>%
# Se conservan observaciones presentes en las 5 olas
filter(tipo_atricion == 1) %>%
# Crear variables de PHQ9
purrr::map_at(.at = vars(starts_with('s11_0')),
.f = function(s) car::recode(s, "1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA")) %>%
as.data.frame() %>%
mutate(phq9 = (s11_01 + s11_02 + s11_03 + s11_04 + s11_05 + s11_06 + s11_07 + s11_08 + s11_09)) %>%
# Quitar NAs
filter(!is.na(phq9)) %>%
# Crear indicador de depresión en 4 y en 2 categorías:
mutate(depr4 = car::recode(phq9, "0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4"),
depr2 = car::recode(phq9, "0:9 = 0; 10:27 = 1"))
set.seed(123)
lcga1_quad <- hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 1,
data = elsoc_salud_long)
lcga2_quad <- gridsearch(rep = 10, maxiter = 10, minit = lcga1_quad,
hlme(phq9 ~ ola + I(ola^2), subject = "idencuesta", ng = 2,
data = elsoc_salud_long, mixture = ~ ola + I(ola^2)))
summary(lcga1_lin)
m.a <- predictY(lcga4_quad, data.frame(ola = 1:5, m0_sexo = 1))
summary(lcga4_lin)
pred_lcga4_lin <- predictY(lcga4_lin, data.frame(ola = 1:5))
install.packages('rmarkdown')
install.packages('rmarkdown')
install.packages("rmarkdown")
