[["index.html", "Trayectorias de sintomatología depresiva Cargar y preparar datos ELSOC 0.1 Cargar librerías", " Trayectorias de sintomatología depresiva Álvaro Jiménez, Fabián Duarte, Edgardo Cerda Cargar y preparar datos ELSOC 0.1 Cargar librerías # Librerias graficos library(ggpubr) library(shiny) library(plotly) library(ggstance) # Libreria analisis estadístico library(nnet) library(modelsummary) library(lcmm) library(rcompanion) library(statar) library(marginaleffects) "],["trayectorias-de-sintomatología-depresiva.-modelo-optimal-matching.html", "Capítulo 1 Trayectorias de sintomatología depresiva. Modelo Optimal-Matching 1.1 Secuencia de depresión con 4 categorías:", " Capítulo 1 Trayectorias de sintomatología depresiva. Modelo Optimal-Matching 1.1 Secuencia de depresión con 4 categorías: # Crear objeto con secuencias seq.depr4 &lt;- TraMineR::seqdef(elsoc_salud_wide, var = c(&#39;depr4_w01&#39;, &#39;depr4_w02&#39;, &#39;depr4_w03&#39;, &#39;depr4_w04&#39;), states = c(&#39;Sin síntomas&#39;, &#39;Síntomas medios&#39;, &#39;Síntomas moderados&#39;, &#39;Síntomas severos&#39;), labels = c(&#39;Sin síntomas&#39;, &#39;Síntomas medios&#39;, &#39;Sintomas moderados&#39;, &#39;Síntomas severos&#39;), weights = elsoc_salud_wide$ponderador02_w01, cpal = c(&#39;lightgreen&#39;, &#39;mediumturquoise&#39;, &#39;skyblue3&#39;, &#39;slateblue4&#39;)) 1.1.1 Gráfico de secuencias: Muestra todas las secuencias, ordenadas según la suma total del indice phq9 (sumando las 5 olas) TraMineR::seqIplot(seq.depr4, border = NA, xtlab = 2016:2019, space = 0, sortv = elsoc_salud_wide$phq_sum) 1.1.2 Frecuencia de estados y transiciones seqstatd(seq.depr4) ## [State frequencies] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 ## Sin síntomas 0.481 0.49 0.435 0.37 ## Síntomas medios 0.307 0.29 0.329 0.39 ## Síntomas moderados 0.138 0.11 0.137 0.15 ## Síntomas severos 0.075 0.11 0.099 0.10 ## ## [Valid states] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 ## N 1728 1728 1728 1728 ## ## [Entropy index] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 ## H 0.85 0.86 0.89 0.9 seqtrate(seq.depr4) ## [-&gt; Sin síntomas] [-&gt; Síntomas medios] ## [Sin síntomas -&gt;] 0.6038410 0.2922604 ## [Síntomas medios -&gt;] 0.3438261 0.4239771 ## [Síntomas moderados -&gt;] 0.1729046 0.3531208 ## [Síntomas severos -&gt;] 0.1978647 0.2363666 ## [-&gt; Síntomas moderados] [-&gt; Síntomas severos] ## [Sin síntomas -&gt;] 0.0594495 0.04444910 ## [Síntomas medios -&gt;] 0.1467422 0.08545468 ## [Síntomas moderados -&gt;] 0.2571979 0.21677672 ## [Síntomas severos -&gt;] 0.2669224 0.29884634 1.1.3 Clusters de secuencias: # Medir distancias entre secuencias usando analisis de secuencias usando optimal matching analysis # Se define matriz de costos de sustitución basados en valores medios de indice phq9 substitution_cost_matrix &lt;- as.matrix(rbind(c(0, 5, 10, 19), c(5, 0, 5, 14), c(10, 5, 0, 9), c(19, 14, 9, 0))) dist.depr4 &lt;- TraMineR::seqdist(seq.depr4, method = &quot;OM&quot;, sm = substitution_cost_matrix) # Construir tipos de trayectorias con analisis de cluster jerarquico Ward ward.depr4 &lt;- cluster::agnes(dist.depr4, diss = TRUE, method = &#39;ward&#39;) Indicadores de calidad de partición: Se evalúa según los indicadores: kableExtra::kbl(data.frame(indicador = c(&#39;Point Biserial Correlation&#39;, &quot;Hubert&#39;s Somers&#39; D&quot;, &quot;Hubert&#39;s C&quot;, &quot;Average Silhouette Width (weighted)&quot;), abreviacion = c(&#39;PBC&#39;, &#39;HGSD&#39;, &#39;HC&#39;, &#39;ASWw&#39;), interpretacion = c(&#39;Mide la capacidad de la clusterización de reproducir las distancias&#39;, &#39;Mide la capacidad de la clusterización de reproducir las distancias tomando en cuenta empates en distancias&#39;, &#39;Mide la brecha entre la clusterización obtenida y la mejor partición teóricamente posible con este número de grupos y distancias&#39;, &#39;Mide la coherencia de asignaciones. Alta coherencia indica una alta distancia entre grupos y fuerte homogeneidad inter-grupal&#39;))) indicador abreviacion interpretacion Point Biserial Correlation PBC Mide la capacidad de la clusterización de reproducir las distancias Hubert’s Somers’ D HGSD Mide la capacidad de la clusterización de reproducir las distancias tomando en cuenta empates en distancias Hubert’s C HC Mide la brecha entre la clusterización obtenida y la mejor partición teóricamente posible con este número de grupos y distancias Average Silhouette Width (weighted) ASWw Mide la coherencia de asignaciones. Alta coherencia indica una alta distancia entre grupos y fuerte homogeneidad inter-grupal # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range.depr4 &lt;- WeightedCluster::as.clustrange(ward.depr4, diss = dist.depr4, ncluster = 10) # Visualizar clusters: ward.range.depr4$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) Para ASWw, HG y PBC, mientras más alto el valor indica una mejor calidad en la partición. Para HC mientras más bajo es mejor. Los mejores valores parecen estar entre 4 y 5 clusters. 1.1.4 Graficos de secuencias por clusters Pruebas con 4-6 clusters TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 4), border = NA, space = 0, idxs = 0, xtlab = 2016:2019) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 4), border = NA, space = 0) TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 5), border = NA, space = 0, idxs = 0, xtlab = 2016:2019) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 5), border = NA, space = 0) TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 6), border = NA, space = 0, idxs = 0, xtlab = 2016:2019) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 6), border = NA, space = 0) "],["trayectorias-de-sintomatologia-depresiva.-modelo-latent-class-mixed-model-lcmm.html", "Capítulo 2 Trayectorias de sintomatologia depresiva. Modelo Latent Class Mixed Model (LCMM) 2.1 Identificar trayectorias: 2.2 Principales trayectorias", " Capítulo 2 Trayectorias de sintomatologia depresiva. Modelo Latent Class Mixed Model (LCMM) 2.1 Identificar trayectorias: Modelos de trayectorias lineales: Se usa el modelo de 1 clase para fijar los valores iniciales a iterar: load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;modelos_lcmm.RData&#39;)) Comparación resultados # Comparar resultados: resultados_comparados &lt;- summarytable(lcmm3_lin, lcmm4_lin, lcmm5_lin) postprob(lcmm3_lin) ## ## Posterior classification: ## class1 class2 class3 ## N 461.0 1370.00 82.00 ## % 24.1 71.62 4.29 ## ## Posterior classification table: ## --&gt; mean of posterior probabilities in each class ## prob1 prob2 prob3 ## class1 0.8217 0.1326 0.0458 ## class2 0.0617 0.9383 0.0000 ## class3 0.1291 0.0000 0.8709 ## ## Posterior probabilities above a threshold (%): ## class1 class2 class3 ## prob&gt;0.7 77.44 92.85 82.93 ## prob&gt;0.8 62.69 88.18 74.39 ## prob&gt;0.9 41.43 81.09 59.76 ## postprob(lcmm4_lin) ## ## Posterior classification: ## class1 class2 class3 class4 ## N 392.00 1346.00 98.00 77.00 ## % 20.49 70.36 5.12 4.03 ## ## Posterior classification table: ## --&gt; mean of posterior probabilities in each class ## prob1 prob2 prob3 prob4 ## class1 0.7853 0.1343 0.0521 0.0282 ## class2 0.0613 0.9342 0.0045 0.0000 ## class3 0.1376 0.0435 0.7797 0.0392 ## class4 0.0978 0.0000 0.0248 0.8774 ## ## Posterior probabilities above a threshold (%): ## class1 class2 class3 class4 ## prob&gt;0.7 69.13 92.35 68.37 83.12 ## prob&gt;0.8 51.28 88.19 50.00 75.32 ## prob&gt;0.9 27.81 80.76 37.76 61.04 ## postprob(lcmm5_lin) ## ## Posterior classification: ## class1 class2 class3 class4 class5 ## N 129.00 80.00 48.00 1243.00 413.00 ## % 6.74 4.18 2.51 64.98 21.59 ## ## Posterior classification table: ## --&gt; mean of posterior probabilities in each class ## prob1 prob2 prob3 prob4 prob5 ## class1 0.7675 0.0243 0.0432 0.0051 0.1600 ## class2 0.0374 0.8124 0.0238 0.0025 0.1239 ## class3 0.0970 0.0549 0.8455 0.0000 0.0025 ## class4 0.0018 0.0004 0.0000 0.8932 0.1045 ## class5 0.0850 0.0456 0.0003 0.1747 0.6945 ## ## Posterior probabilities above a threshold (%): ## class1 class2 class3 class4 class5 ## prob&gt;0.7 68.22 72.50 75.00 88.17 52.06 ## prob&gt;0.8 44.96 58.75 70.83 78.76 22.76 ## prob&gt;0.9 27.91 45.00 52.08 64.60 0.00 ## kableExtra::kbl(resultados_comparados[,1:4], digits = 1) G loglik npm BIC lcmm3_lin 3 -22642.0 9 45352.1 lcmm4_lin 4 -22555.4 12 45201.5 lcmm5_lin 5 -22530.1 15 45173.5 kableExtra::kbl(resultados_comparados[,5:9], digits = 1) %class1 %class2 %class3 %class4 %class5 lcmm3_lin 24.1 71.6 4.3 NA NA lcmm4_lin 20.5 70.4 5.1 4 NA lcmm5_lin 6.7 4.2 2.5 65 21.6 2.2 Principales trayectorias Según criterios de información debería estar entre 4 y 5 clases: summary(lcmm4_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 4, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1913 ## Number of observations: 7518 ## Number of latent classes: 4 ## Number of parameters: 12 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 40 ## Convergence criteria: parameters= 1.4e-06 ## : likelihood= 1.5e-06 ## : second derivatives= 1e-11 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22555.4 ## AIC: 45134.8 ## BIC: 45201.47 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 1.60697 0.17336 9.269 0.00000 ## intercept class2 2.76869 0.17449 15.867 0.00000 ## intercept class3 0.23970 0.26032 0.921 0.35717 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 11.03683 0.59999 18.395 0.00000 ## intercept class2 3.05637 0.17041 17.935 0.00000 ## intercept class3 2.61047 0.81512 3.203 0.00136 ## intercept class4 19.70159 0.78596 25.067 0.00000 ## ola class1 -0.56535 0.18629 -3.035 0.00241 ## ola class2 0.46852 0.05640 8.307 0.00000 ## ola class3 3.79455 0.32909 11.530 0.00000 ## ola class4 -1.22304 0.28494 -4.292 0.00002 ## ## coef Se ## Residual standard error: 4.15204 0.03821 pred_lcmm4_lin &lt;- predictY(lcmm4_lin, data.frame(ola = 1:4)) plot(pred_lcmm4_lin, ylim = c(0, 27)) summary(lcmm5_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 5, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1913 ## Number of observations: 7518 ## Number of latent classes: 5 ## Number of parameters: 15 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 44 ## Convergence criteria: parameters= 2.8e-05 ## : likelihood= 3.6e-05 ## : second derivatives= 7e-11 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22530.07 ## AIC: 45090.14 ## BIC: 45173.49 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 -1.13363 0.27773 -4.082 0.00004 ## intercept class2 -1.60297 0.20873 -7.680 0.00000 ## intercept class3 -2.22890 0.27204 -8.193 0.00000 ## intercept class4 0.97249 0.14158 6.869 0.00000 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 17.29624 1.14421 15.116 0.00000 ## intercept class2 3.60754 0.92278 3.909 0.00009 ## intercept class3 19.54451 1.02567 19.055 0.00000 ## intercept class4 2.99012 0.19379 15.429 0.00000 ## intercept class5 7.05194 0.92131 7.654 0.00000 ## ola class1 -2.12546 0.30092 -7.063 0.00000 ## ola class2 3.71429 0.33522 11.080 0.00000 ## ola class3 -0.59843 0.39151 -1.529 0.12639 ## ola class4 0.39012 0.06903 5.652 0.00000 ## ola class5 0.49307 0.29497 1.672 0.09460 ## ## coef Se ## Residual standard error: 4.08242 0.03853 pred_lcmm5_lin &lt;- predictY(lcmm5_lin, data.frame(ola = 1:4)) plot(pred_lcmm5_lin, ylim = c(0, 27)) # Librerías básicas library(tidyverse) load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;datos_elsoc_preparados.RData&#39;)) elsoc_salud_modelo &lt;- elsoc_salud_wide "],["trayectorias-de-variables-independientes.html", "Capítulo 3 Trayectorias de variables independientes Agregar variables independientes 3.1 Crear y agregar trayectorias de variables independientes 3.2 Guardar datos para usar despues", " Capítulo 3 Trayectorias de variables independientes Agregar variables independientes 3.1 Crear y agregar trayectorias de variables independientes comparar_clusters &lt;- function(.data, vars, K = 10) { seq &lt;- TraMineR::seqdef(.data, var = vars, weights = .data$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range &lt;- WeightedCluster::as.clustrange(ward, diss = dist, ncluster = K) # Visualizar clusters: ward.range$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) + ylab(&#39;Valor estandarizado&#39;) } trayectoria &lt;- function(.data, vars, K, olas = 2016:2019, MISSING = TRUE, ...) { seq &lt;- TraMineR::seqdef(.data, var = vars, ..., weights = .data$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = MISSING) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) TraMineR::seqIplot(seq, group = stats::cutree(ward, k = K), border = NA, space = 0, idxs = 0, xtlab = olas) TraMineR::seqdplot(seq, group = stats::cutree(ward, k = K), border = NA, space = 0) } Situacion ocupacional (4 categorias) comparar_clusters(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 5) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 6) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 7) # Agregar trayectoria de 6 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_ocup &lt;- factor(stats::cutree(ward, k = 6), levels = c(3, 1, 4, 2, 5, 6), labels = c(&#39;Ocupados estables&#39;, &#39;Pasan de inactividad a ocupacion&#39;, &#39;Ocupados con periodos sin ocupacion&#39;, &#39;Mayoritariamente inactivos&#39;, &#39;Mayoritariamente trabajo no remunerado&#39;, &#39;Mayoritariamente desempleados&#39;)) Sobrecarga por deudas comparar_clusters(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 5) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 6) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_deuda &lt;- factor(stats::cutree(ward, k = 5), levels = c(4, 3, 1, 2), labels = c(&#39;Nada/No muy sobrecargados deuda&#39;, &#39;Reduccion sobrecarga deuda&#39;, &#39;Aumento sobrecarga deuda&#39;, &#39;Bastante/muy sobrecargados deuda&#39;)) Actividad fisica regular comparar_clusters(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 2) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_activ_fisica &lt;- factor(stats::cutree(ward, k = 4), levels = c(2, 3, 4, 1), labels = c(&#39;Sin actividad fisica persistente&#39;, &#39;Abandonan actividad fisica en 2021&#39;, &#39;Se activan en 2021&#39;, &#39;Con actividad fisica persistente&#39;)) Apoyo social comparar_clusters(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;, &#39;khaki3&#39;), olas = c(2016, 2018), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;, &#39;khaki3&#39;), olas = c(2016, 2018), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_apoyo_social &lt;- factor(stats::cutree(ward, k = 5), levels = c(5, 4, 2, 1, 3), labels = c(&#39;Apoyo social estable&#39;, &#39;Apoyo social/decreciente&#39;, &#39;Apoyo social medio&#39;, &#39;Apoyo social cambiante&#39;, &#39;Sin apoyo social&#39;)) Salud subjetiva comparar_clusters(elsoc_salud_modelo, vars = c(&#39;salud_w01&#39;, &#39;salud_w02&#39;, &#39;salud_w03&#39;, &#39;salud_w04&#39;, &#39;salud_w05&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;salud_w01&#39;, &#39;salud_w02&#39;, &#39;salud_w03&#39;, &#39;salud_w04&#39;, &#39;salud_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;, &#39;khaki3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;salud_w01&#39;, &#39;salud_w02&#39;, &#39;salud_w03&#39;, &#39;salud_w04&#39;, &#39;salud_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;, &#39;khaki3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;salud_w01&#39;, &#39;salud_w02&#39;, &#39;salud_w03&#39;, &#39;salud_w04&#39;, &#39;salud_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;, &#39;khaki3&#39;), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;salud_w01&#39;, &#39;salud_w02&#39;, &#39;salud_w03&#39;, &#39;salud_w04&#39;, &#39;salud_w05&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_salud &lt;- factor(stats::cutree(ward, k = 4), levels = c(4, 3, 2, 1), labels = c(&#39;Salud subjetiva muy buena&#39;, &#39;Salud subjetiva regular/muy buena&#39;, &#39;Salud subjetiva regular&#39;, &#39;Salud subjetiva mala/regular&#39;)) 3.2 Guardar datos para usar despues save(elsoc_salud_modelo, file = file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;datos_salud_modelo.RData&#39;)) library(tidyverse) # Librerias graficos library(ggpubr) library(plotly) library(ggstance) # Libreria analisis estadístico library(nnet) library(modelsummary) library(marginaleffects) "],["modelo-multinomial-logit.html", "Capítulo 4 Modelo multinomial logit 4.1 Comparación trayectorias 4.2 Variable dependiente: Trayectorias LCMM 4 clases - sin trayectoria salud subjetiva 4.3 Resultados en formato grafico", " Capítulo 4 Modelo multinomial logit load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;datos_elsoc_preparados.RData&#39;)) load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;datos_salud_modelo.RData&#39;)) load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;modelos_lcmm.RData&#39;)) elsoc_salud_modelo &lt;- elsoc_salud_modelo %&gt;% left_join(elsoc_lcmm, by = &#39;idencuesta&#39;) 4.1 Comparación trayectorias with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_gmm.4lin, trayectoria_gmm.5lin, bias.correct = TRUE)) ## Cramer V ## 0.8318 Trayectorias según clasificación elsoc_salud_long %&gt;% left_join(elsoc_lcmm, by = &#39;idencuesta&#39;) %&gt;% filter(!is.na(trayectoria_gmm.4lin)) %&gt;% group_by(trayectoria_gmm.4lin) %&gt;% sjlabelled::as_label(ola) %&gt;% ggplot(aes(y = phq9, x = ola, group = idencuesta, color = trayectoria_gmm.4lin)) + facet_wrap(~trayectoria_gmm.4lin) + geom_line(alpha = .25) + geom_point(alpha = .25) + geom_hline(yintercept = 10, linetype = 2) + scale_y_continuous(limits = c(0, 27)) + theme(legend.position = &#39;none&#39;) + ylab(&#39;Indice PHQ-9&#39;) + xlab(NULL) 4.2 Variable dependiente: Trayectorias LCMM 4 clases - sin trayectoria salud subjetiva m1 &lt;- elsoc_salud_modelo %&gt;% sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %&gt;% nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup, data = ., weights = ponderador02_w01, quiet = TRUE) ## # weights: 68 (48 variable) ## initial value 1621.434842 ## iter 10 value 1174.761465 ## iter 20 value 997.875096 ## iter 30 value 934.683457 ## iter 40 value 930.896799 ## iter 50 value 930.876897 ## final value 930.876689 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %&gt;% nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + proyecto_vida_w03 + estresor_n, data = ., weights = ponderador02_w01, quiet = TRUE) ## # weights: 76 (54 variable) ## initial value 1621.434842 ## iter 10 value 1160.094213 ## iter 20 value 972.028620 ## iter 30 value 905.068388 ## iter 40 value 899.137250 ## iter 50 value 899.079174 ## final value 899.075846 ## converged m3 &lt;- elsoc_salud_modelo %&gt;% sjlabelled::as_label(m0_sexo_w01, proyecto_vida_w03) %&gt;% nnet::multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + proyecto_vida_w03 + estresor_n + extraversion_w02 + agreeableness_w02 + conscientiousness_w02 + neuroticism_w02 + openness_w02, data = ., weights = ponderador02_w01, quiet = TRUE) ## # weights: 96 (69 variable) ## initial value 1609.774721 ## iter 10 value 1249.717655 ## iter 20 value 1009.524670 ## iter 30 value 901.663211 ## iter 40 value 868.890026 ## iter 50 value 848.393287 ## iter 60 value 847.710837 ## iter 70 value 847.705451 ## final value 847.705340 ## converged em1 &lt;- marginaleffects(m1, type = &quot;probs&quot;, conf_level = .95) %&gt;% summary() %&gt;% mutate(term = paste0(term, contrast)) em2 &lt;- marginaleffects(m2, type = &quot;probs&quot;, conf_level = .95) %&gt;% summary() %&gt;% mutate(term = paste0(term, contrast)) em3 &lt;- marginaleffects(m3, type = &quot;probs&quot;, conf_level = .95) %&gt;% summary() %&gt;% mutate(term = paste0(term, contrast)) modelsummary::modelsummary(list(m1, m2, m3), estimate = &quot;{estimate}{stars}&quot;, statistic = NULL, stars = c(&#39;*&#39; = .1, &#39;**&#39; = .05, &#39;***&#39; = .01), shape = term + response ~ model, exponentiate = TRUE) Model 1 Model 2 Model 3 (Intercept) Trayectoria sintomas moderados 58.871*** 28.951** 19.547* Trayectoria de sintomas ascendente 36.051 19.776 8.121 Trayectoria sintomas severos persistentes 1.090 0.220 0.013 m0_sexo_w01Mujer Trayectoria sintomas moderados 2.323*** 2.288*** 2.078*** Trayectoria de sintomas ascendente 4.531*** 4.247*** 3.940*** Trayectoria sintomas severos persistentes 4.646*** 4.860*** 5.546*** m0_edad_w01 Trayectoria sintomas moderados 0.986*** 0.980*** 0.987** Trayectoria de sintomas ascendente 0.991 0.984 0.989 Trayectoria sintomas severos persistentes 1.009 1.002 1.006 log_ing Trayectoria sintomas moderados 0.606*** 0.642*** 0.634*** Trayectoria de sintomas ascendente 0.547*** 0.583** 0.590** Trayectoria sintomas severos persistentes 0.758 0.858 0.904 trayectoria_deudaReduccion sobrecarga deuda Trayectoria sintomas moderados 1.718** 1.771** 1.692** Trayectoria de sintomas ascendente 1.469 1.435 1.401 Trayectoria sintomas severos persistentes 1.315 1.483 1.604 trayectoria_deudaAumento sobrecarga deuda Trayectoria sintomas moderados 2.008*** 1.902*** 1.776** Trayectoria de sintomas ascendente 1.287 1.221 1.162 Trayectoria sintomas severos persistentes 4.464*** 4.373*** 4.354*** trayectoria_deudaBastante/muy sobrecargados deuda Trayectoria sintomas moderados 2.427*** 2.448*** 1.995** Trayectoria de sintomas ascendente 1.231 1.251 1.054 Trayectoria sintomas severos persistentes 2.915** 3.234** 3.075** trayectoria_apoyo_socialApoyo social/decreciente Trayectoria sintomas moderados 0.103*** 0.106*** 0.105*** Trayectoria de sintomas ascendente 0.367* 0.405 0.441 Trayectoria sintomas severos persistentes 0.145*** 0.150*** 0.170*** trayectoria_apoyo_socialApoyo social medio Trayectoria sintomas moderados 0.448*** 0.400*** 0.369*** Trayectoria de sintomas ascendente 0.574 0.518 0.529 Trayectoria sintomas severos persistentes 0.197*** 0.172*** 0.129*** trayectoria_apoyo_socialApoyo social cambiante Trayectoria sintomas moderados 0.584** 0.542** 0.479*** Trayectoria de sintomas ascendente 0.678 0.647 0.659 Trayectoria sintomas severos persistentes 0.338*** 0.313*** 0.246*** trayectoria_apoyo_socialSin apoyo social Trayectoria sintomas moderados 0.475*** 0.427*** 0.386*** Trayectoria de sintomas ascendente 0.564 0.504 0.508 Trayectoria sintomas severos persistentes 0.185*** 0.171*** 0.100*** trayectoria_ocupPasan de inactividad a ocupacion Trayectoria sintomas moderados 3.676*** 4.538*** 5.410*** Trayectoria de sintomas ascendente 1.141 1.407 1.489 Trayectoria sintomas severos persistentes 0.672 0.986 1.159 trayectoria_ocupOcupados con periodos sin ocupacion Trayectoria sintomas moderados 2.083 2.288 3.154** Trayectoria de sintomas ascendente 2.236 2.413 2.731 Trayectoria sintomas severos persistentes 0.620 0.806 0.955 trayectoria_ocupMayoritariamente inactivos Trayectoria sintomas moderados 2.844** 3.285** 4.702*** Trayectoria de sintomas ascendente 2.163 2.468 2.892 Trayectoria sintomas severos persistentes 0.381* 0.516 0.646 trayectoria_ocupMayoritariamente trabajo no remunerado Trayectoria sintomas moderados 5.355*** 4.372*** 5.042*** Trayectoria de sintomas ascendente 1.613 1.316 1.383 Trayectoria sintomas severos persistentes 0.727 0.609 0.647 trayectoria_ocupMayoritariamente desempleados Trayectoria sintomas moderados 2.132 2.715* 3.395** Trayectoria de sintomas ascendente 3.170 4.139* 4.675** Trayectoria sintomas severos persistentes 0.421 0.639 0.687 proyecto_vida_w03Decidido direccion de vida Trayectoria sintomas moderados 0.623** 0.696* Trayectoria de sintomas ascendente 0.485** 0.517** Trayectoria sintomas severos persistentes 0.385*** 0.417** estresor_n Trayectoria sintomas moderados 1.386*** 1.373*** Trayectoria de sintomas ascendente 1.438*** 1.431*** Trayectoria sintomas severos persistentes 1.581*** 1.629*** extraversion_w02 Trayectoria sintomas moderados 1.038 Trayectoria de sintomas ascendente 1.007 Trayectoria sintomas severos persistentes 0.841 agreeableness_w02 Trayectoria sintomas moderados 0.834*** Trayectoria de sintomas ascendente 0.937 Trayectoria sintomas severos persistentes 1.012 conscientiousness_w02 Trayectoria sintomas moderados 0.865** Trayectoria de sintomas ascendente 0.922 Trayectoria sintomas severos persistentes 0.912 neuroticism_w02 Trayectoria sintomas moderados 1.418*** Trayectoria de sintomas ascendente 1.236** Trayectoria sintomas severos persistentes 1.616*** openness_w02 Trayectoria sintomas moderados 1.054 Trayectoria de sintomas ascendente 1.056 Trayectoria sintomas severos persistentes 1.096 Num.Obs. 1244 1244 1226 AIC 1957.8 1906.2 1833.4 BIC 2203.8 2183.0 2186.1 RMSE 0.34 0.33 0.33 4.3 Resultados en formato grafico m3.coefs &lt;- broom::tidy(m3, conf.int=TRUE) Variables de control em3 %&gt;% filter(term %in% c(&#39;m0_sexo_w01Mujer - Hombre&#39;, &#39;m0_edad_w01dY/dX&#39;, &#39;log_ingdY/dX&#39;, &#39;proyecto_vida_w03Decidido direccion de vida - No decidido direccion de vida&#39;, &#39;estresor_ndY/dX&#39;)) %&gt;% mutate(term = factor(term, levels = c(&#39;m0_sexo_w01Mujer - Hombre&#39;, &#39;m0_edad_w01dY/dX&#39;, &#39;log_ingdY/dX&#39;, &#39;proyecto_vida_w03Decidido direccion de vida - No decidido direccion de vida&#39;, &#39;estresor_ndY/dX&#39;), labels = c(&#39;Sexo (mujer=1)&#39;, &#39;Edad&#39;, &#39;Log(ing)&#39;, &#39;Decidido direccion\\nde vida&#39;, &#39;N estresores&#39;)), group = gsub(&#39;Trayectoria sintomas&#39;, &#39;Trayectoria sintomas\\n&#39;, group)) %&gt;% ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) + geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high), position = position_dodgev(height = 0.75)) + geom_vline(xintercept = 0, linetype = 2, alpha = .5) + scale_color_discrete(guide = guide_legend(reverse = TRUE)) + theme(legend.position = &#39;top&#39;) + theme(legend.title = element_blank()) + xlab(&#39;Probabilidad predicha&#39;) + ylab(NULL) Trayectoria sobrecarga deuda em3 %&gt;% filter(grepl(&#39;trayectoria_deuda&#39;, term)) %&gt;% mutate(term = gsub(&quot;trayectoria_deuda&quot;, &quot;&quot;, term), term = gsub(&quot; - Nada/No muy sobrecargados deuda&quot;, &quot;&quot;, term), group = gsub(&#39;Trayectoria sintomas&#39;, &#39;Trayectoria sintomas\\n&#39;, group)) %&gt;% ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) + geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high), position = position_dodgev(height = 0.75)) + geom_vline(xintercept = 0, linetype = 2, alpha = .5) + scale_color_discrete(guide = guide_legend(reverse = TRUE)) + theme(legend.position = &#39;top&#39;) + theme(legend.title = element_blank()) + xlab(&#39;Probabilidad predicha cr a Nada/No muy sobrecargados deuda&#39;) + ylab(NULL) Apoyo social em3 %&gt;% filter(grepl(&#39;apoyo_social&#39;, term)) %&gt;% mutate(term = gsub(&quot;trayectoria_apoyo_social&quot;, &quot;&quot;, term), term = gsub(&quot; - Apoyo social estable&quot;, &quot;&quot;, term), group = gsub(&#39;Trayectoria sintomas&#39;, &#39;Trayectoria sintomas\\n&#39;, group)) %&gt;% ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) + geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high), position = position_dodgev(height = 0.75)) + geom_vline(xintercept = 0, linetype = 2, alpha = .5) + scale_color_discrete(guide = guide_legend(reverse = TRUE)) + theme(legend.position = &#39;top&#39;) + theme(legend.title = element_blank()) + xlab(&#39;Probabilidad predicha cr a Apoyo social estable&#39;) + ylab(NULL) Trayectoria ocupacional em3 %&gt;% filter(grepl(&#39;ocup&#39;, term)) %&gt;% mutate(term = gsub(&quot;trayectoria_ocup&quot;, &quot;&quot;, term), term = gsub(&quot; - Ocupados estables&quot;, &quot;&quot;, term), group = gsub(&#39;Trayectoria sintomas&#39;, &#39;Trayectoria sintomas\\n&#39;, group)) %&gt;% ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) + geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high), position = position_dodgev(height = 0.75)) + geom_vline(xintercept = 0, linetype = 2, alpha = .5) + scale_color_discrete(guide = guide_legend(reverse = TRUE)) + theme(legend.position = &#39;top&#39;) + theme(legend.title = element_blank()) + xlab(&#39;Probabilidad predicha cr a Ocupados estables&#39;) + ylab(NULL) Variables de personalidad em3 %&gt;% filter(term %in% c(&#39;extraversion_w02dY/dX&#39;, &#39;agreeableness_w02dY/dX&#39;, &#39;conscientiousness_w02dY/dX&#39;, &#39;neuroticism_w02dY/dX&#39;, &#39;openness_w02dY/dX&#39;)) %&gt;% mutate(term = gsub(&quot;_w02&quot;, &quot;&quot;, term), term = str_to_title(gsub(&quot;dY/dX&quot;, &quot;&quot;, term)), group = gsub(&#39;Trayectoria sintomas&#39;, &#39;Trayectoria sintomas\\n&#39;, group)) %&gt;% ggplot(aes(x = estimate, y = fct_rev(term), colour = fct_rev(group))) + geom_pointrangeh(aes(xmin = conf.low, xmax = conf.high), position = position_dodgev(height = 0.75)) + geom_vline(xintercept = 0, linetype = 2, alpha = .5) + scale_color_discrete(guide = guide_legend(reverse = TRUE)) + theme(legend.position = &#39;top&#39;) + theme(legend.title = element_blank()) + xlab(&#39;Probabilidad predicha&#39;) + ylab(NULL) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
