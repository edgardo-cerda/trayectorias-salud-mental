[["index.html", "Trayectorias de sintomatología depresiva Cargar y preparar datos ELSOC 0.1 Cargar librerías", " Trayectorias de sintomatología depresiva Álvaro Jiménez, Fabián Duarte, Edgardo Cerda Cargar y preparar datos ELSOC 0.1 Cargar librerías # Librerías básicas library(tidyverse) library(sjlabelled) # Librerias análisis de secuencia library(TraMineR) library(TraMineRextras) library(WeightedCluster) library(cluster) # Librería ELSOC library(elsoc) # Librerias graficos library(ggpubr) library(shiny) library(plotly) # Libreria analisis estadístico library(nnet) library(modelsummary) library(lcmm) library(rcompanion) library(statar) # Cargar datos ELSOC: # elsoc::load_elsoc(data = &#39;wide&#39;) load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;ELSOC_Wide_2016_2021_v1.00_R.RData&#39;)) # Crear variables de sintomatología depresiva por ola: elsoc_salud &lt;- elsoc_wide_2016_2021 %&gt;% # Se conservan observaciones presentes en las 5 olas filter(tipo_atricion %in% 1:2) %&gt;% # Crear variables de PHQ9 purrr::map_at(.at = vars(starts_with(&#39;s11_0&#39;)), .f = function(s) car::recode(s, &quot;1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA&quot;)) %&gt;% as.data.frame() %&gt;% mutate(phq9_w01 = (s11_01_w01 + s11_02_w01 + s11_03_w01 + s11_04_w01 + s11_05_w01 + s11_06_w01 + s11_07_w01 + s11_08_w01 + s11_09_w01), phq9_w02 = (s11_01_w02 + s11_02_w02 + s11_03_w02 + s11_04_w02 + s11_05_w02 + s11_06_w02 + s11_07_w02 + s11_08_w02 + s11_09_w02), phq9_w03 = (s11_01_w03 + s11_02_w03 + s11_03_w03 + s11_04_w03 + s11_05_w03 + s11_06_w03 + s11_07_w03 + s11_08_w03 + s11_09_w03), phq9_w04 = (s11_01_w04 + s11_02_w04 + s11_03_w04 + s11_04_w04 + s11_05_w04 + s11_06_w04 + s11_07_w04 + s11_08_w04 + s11_09_w04) ) %&gt;% # Quitar NAs filter(!is.na(phq9_w01), !is.na(phq9_w02), !is.na(phq9_w03), !is.na(phq9_w04)) %&gt;% # Crear indicador de depresión en 4 y en 2 categorías: mutate(depr4_w01 = car::recode(phq9_w01, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w02 = car::recode(phq9_w02, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w03 = car::recode(phq9_w03, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w04 = car::recode(phq9_w04, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr2_w01 = car::recode(phq9_w01, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w02 = car::recode(phq9_w02, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w03 = car::recode(phq9_w03, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w04 = car::recode(phq9_w04, &quot;0:9 = 0; 10:27 = 1&quot;), phq_sum = depr4_w01 + depr4_w02 + depr4_w03 + depr4_w04 ) # Cargar datos ELSOC LONG: # elsoc::load_elsoc(data = &#39;long&#39;) load(file.path(&#39;..&#39;, &#39;inputs&#39;, &#39;ELSOC_Long_2016_2021_v1.00_R.RData&#39;)) # Crear variables de sintomatología depresiva por ola LONG: elsoc_salud_long &lt;- elsoc_long_2016_2021 %&gt;% # Se conservan observaciones presentes en las 5 olas filter(tipo_atricion %in% 1:2, ola != 5) %&gt;% # Crear variables de PHQ9 purrr::map_at(.at = vars(starts_with(&#39;s11_0&#39;)), .f = function(s) car::recode(s, &quot;1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA&quot;)) %&gt;% as.data.frame() %&gt;% mutate(phq9 = (s11_01 + s11_02 + s11_03 + s11_04 + s11_05 + s11_06 + s11_07 + s11_08 + s11_09)) %&gt;% # Quitar NAs filter(!is.na(phq9)) %&gt;% # Crear indicador de depresión en 4 y en 2 categorías: mutate(depr4 = car::recode(phq9, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr2 = car::recode(phq9, &quot;0:9 = 0; 10:27 = 1&quot;)) "],["trayectorias-de-sintomatología-depresiva.-modelo-optimal-matching.html", "Capítulo 1 Trayectorias de sintomatología depresiva. Modelo Optimal-Matching 1.1 Secuencia de depresión con 4 categorías:", " Capítulo 1 Trayectorias de sintomatología depresiva. Modelo Optimal-Matching 1.1 Secuencia de depresión con 4 categorías: # Crear objeto con secuencias seq.depr4 &lt;- TraMineR::seqdef(elsoc_salud, var = c(&#39;depr4_w01&#39;, &#39;depr4_w02&#39;, &#39;depr4_w03&#39;, &#39;depr4_w04&#39;), states = c(&#39;Sin síntomas&#39;, &#39;Síntomas medios&#39;, &#39;Síntomas moderados&#39;, &#39;Síntomas severos&#39;), labels = c(&#39;Sin síntomas&#39;, &#39;Síntomas medios&#39;, &#39;Sintomas moderados&#39;, &#39;Síntomas severos&#39;), weights = elsoc_salud$ponderador02_w01, cpal = c(&#39;lightgreen&#39;, &#39;mediumturquoise&#39;, &#39;skyblue3&#39;, &#39;slateblue4&#39;)) 1.1.1 Gráfico de secuencias: Muestra todas las secuencias, ordenadas según la suma total del indice phq9 (sumando las 5 olas) TraMineR::seqIplot(seq.depr4, border = NA, xtlab = 2016:2019, space = 0, sortv = elsoc_salud$phq_sum) 1.1.2 Frecuencia de estados y transiciones seqstatd(seq.depr4) ## [State frequencies] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 ## Sin síntomas 0.481 0.49 0.435 0.37 ## Síntomas medios 0.307 0.29 0.329 0.39 ## Síntomas moderados 0.138 0.11 0.137 0.15 ## Síntomas severos 0.075 0.11 0.099 0.10 ## ## [Valid states] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 ## N 1728 1728 1728 1728 ## ## [Entropy index] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 ## H 0.85 0.86 0.89 0.9 seqtrate(seq.depr4) ## [-&gt; Sin síntomas] [-&gt; Síntomas medios] ## [Sin síntomas -&gt;] 0.6038410 0.2922604 ## [Síntomas medios -&gt;] 0.3438261 0.4239771 ## [Síntomas moderados -&gt;] 0.1729046 0.3531208 ## [Síntomas severos -&gt;] 0.1978647 0.2363666 ## [-&gt; Síntomas moderados] [-&gt; Síntomas severos] ## [Sin síntomas -&gt;] 0.0594495 0.04444910 ## [Síntomas medios -&gt;] 0.1467422 0.08545468 ## [Síntomas moderados -&gt;] 0.2571979 0.21677672 ## [Síntomas severos -&gt;] 0.2669224 0.29884634 1.1.3 Clusters de secuencias: # Medir distancias entre secuencias usando analisis de secuencias usando optimal matching analysis # Se define matriz de costos de sustitución basados en valores medios de indice phq9 substitution_cost_matrix &lt;- as.matrix(rbind(c(0, 5, 10, 19), c(5, 0, 5, 14), c(10, 5, 0, 9), c(19, 14, 9, 0))) dist.depr4 &lt;- TraMineR::seqdist(seq.depr4, method = &quot;OM&quot;, sm = substitution_cost_matrix) # Construir tipos de trayectorias con analisis de cluster jerarquico Ward ward.depr4 &lt;- cluster::agnes(dist.depr4, diss = TRUE, method = &#39;ward&#39;) Indicadores de calidad de partición: Se evalúa según los indicadores: kableExtra::kbl(data.frame(indicador = c(&#39;Point Biserial Correlation&#39;, &quot;Hubert&#39;s Somers&#39; D&quot;, &quot;Hubert&#39;s C&quot;, &quot;Average Silhouette Width (weighted)&quot;), abreviacion = c(&#39;PBC&#39;, &#39;HGSD&#39;, &#39;HC&#39;, &#39;ASWw&#39;), interpretacion = c(&#39;Mide la capacidad de la clusterización de reproducir las distancias&#39;, &#39;Mide la capacidad de la clusterización de reproducir las distancias tomando en cuenta empates en distancias&#39;, &#39;Mide la brecha entre la clusterización obtenida y la mejor partición teóricamente posible con este número de grupos y distancias&#39;, &#39;Mide la coherencia de asignaciones. Alta coherencia indica una alta distancia entre grupos y fuerte homogeneidad inter-grupal&#39;))) indicador abreviacion interpretacion Point Biserial Correlation PBC Mide la capacidad de la clusterización de reproducir las distancias Hubert’s Somers’ D HGSD Mide la capacidad de la clusterización de reproducir las distancias tomando en cuenta empates en distancias Hubert’s C HC Mide la brecha entre la clusterización obtenida y la mejor partición teóricamente posible con este número de grupos y distancias Average Silhouette Width (weighted) ASWw Mide la coherencia de asignaciones. Alta coherencia indica una alta distancia entre grupos y fuerte homogeneidad inter-grupal # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range.depr4 &lt;- WeightedCluster::as.clustrange(ward.depr4, diss = dist.depr4, ncluster = 10) # Visualizar clusters: ward.range.depr4$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) Para ASWw, HG y PBC, mientras más alto el valor indica una mejor calidad en la partición. Para HC mientras más bajo es mejor. Los mejores valores parecen estar entre 4 y 5 clusters. 1.1.4 Graficos de secuencias por clusters Pruebas con 4-6 clusters TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 4), border = NA, space = 0, idxs = 0, xtlab = 2016:2019) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 4), border = NA, space = 0) TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 5), border = NA, space = 0, idxs = 0, xtlab = 2016:2019) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 5), border = NA, space = 0) TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 6), border = NA, space = 0, idxs = 0, xtlab = 2016:2019) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 6), border = NA, space = 0) "],["trayectorias-de-sintomatologia-depresiva.-modelo-latent-class-mixed-model-lcmm.html", "Capítulo 2 Trayectorias de sintomatologia depresiva. Modelo Latent Class Mixed Model (LCMM) 2.1 Identificar trayectorias: 2.2 Principales trayectorias", " Capítulo 2 Trayectorias de sintomatologia depresiva. Modelo Latent Class Mixed Model (LCMM) set.seed(123) 2.1 Identificar trayectorias: Modelos de trayectorias lineales: Se usa el modelo de 1 clase para fijar los valores iniciales a iterar: lcmm1_lin &lt;- hlme(phq9 ~ ola, subject = &quot;idencuesta&quot;, ng = 1, data = elsoc_salud_long) lcmm2_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 2, data = elsoc_salud_long)) lcmm3_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 3, data = elsoc_salud_long)) lcmm4_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 4, data = elsoc_salud_long)) lcmm5_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 5, data = elsoc_salud_long)) lcmm6_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 6, data = elsoc_salud_long)) Comparación resultados # Comparar resultados: resultados_comparados &lt;- summarytable(lcmm1_lin, lcmm2_lin, lcmm3_lin, lcmm4_lin, lcmm5_lin, lcmm6_lin) kableExtra::kbl(resultados_comparados[,1:4], digits = 1) G loglik npm BIC lcmm1_lin 1 -23481.3 3 46985.3 lcmm2_lin 2 -22741.5 6 45528.4 lcmm3_lin 3 -22642.0 9 45352.1 lcmm4_lin 4 -22555.4 12 45201.5 lcmm5_lin 5 -22530.1 15 45173.5 lcmm6_lin 6 -22530.1 18 45196.2 kableExtra::kbl(resultados_comparados[,5:9], digits = 1) %class1 %class2 %class3 %class4 %class5 lcmm1_lin 100.0 NA NA NA NA lcmm2_lin 19.6 80.4 NA NA NA lcmm3_lin 71.6 4.3 24.1 NA NA lcmm4_lin 20.5 5.1 70.4 4.0 NA lcmm5_lin 2.5 65.0 4.2 21.6 6.7 lcmm6_lin 27.3 6.7 2.5 59.2 0.0 2.2 Principales trayectorias Según criterios de información debería estar entre 4 y 5 clases: summary(lcmm4_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 4, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1913 ## Number of observations: 7518 ## Number of latent classes: 4 ## Number of parameters: 12 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 12 ## Convergence criteria: parameters= 5.9e-05 ## : likelihood= 5.5e-05 ## : second derivatives= 4.8e-10 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22555.4 ## AIC: 45134.8 ## BIC: 45201.47 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 1.60697 0.17349 9.263 0.00000 ## intercept class2 0.23971 0.26128 0.917 0.35891 ## intercept class3 2.76869 0.17480 15.840 0.00000 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 11.03686 0.60059 18.377 0.00000 ## intercept class2 2.61050 0.81625 3.198 0.00138 ## intercept class3 3.05637 0.17040 17.937 0.00000 ## intercept class4 19.70160 0.78637 25.054 0.00000 ## ola class1 -0.56536 0.18648 -3.032 0.00243 ## ola class2 3.79454 0.32965 11.511 0.00000 ## ola class3 0.46852 0.05640 8.307 0.00000 ## ola class4 -1.22304 0.28501 -4.291 0.00002 ## ## coef Se ## Residual standard error: 4.15204 0.03821 pred_lcmm4_lin &lt;- predictY(lcmm4_lin, data.frame(ola = 1:4)) plot(pred_lcmm4_lin, ylim = c(0, 27)) summary(lcmm5_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 5, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1913 ## Number of observations: 7518 ## Number of latent classes: 5 ## Number of parameters: 15 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 21 ## Convergence criteria: parameters= 4.9e-07 ## : likelihood= 2.8e-07 ## : second derivatives= 1e-13 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22530.07 ## AIC: 45090.14 ## BIC: 45173.49 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 -1.09528 0.29176 -3.754 0.00017 ## intercept class2 2.10611 0.24776 8.501 0.00000 ## intercept class3 -0.46935 0.31841 -1.474 0.14048 ## intercept class4 1.13362 0.27766 4.083 0.00004 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 19.54452 1.02554 19.058 0.00000 ## intercept class2 2.99013 0.19370 15.437 0.00000 ## intercept class3 3.60755 0.92284 3.909 0.00009 ## intercept class4 7.05191 0.92077 7.659 0.00000 ## intercept class5 17.29622 1.14397 15.120 0.00000 ## ola class1 -0.59844 0.39142 -1.529 0.12629 ## ola class2 0.39012 0.06900 5.654 0.00000 ## ola class3 3.71429 0.33535 11.076 0.00000 ## ola class4 0.49308 0.29471 1.673 0.09431 ## ola class5 -2.12546 0.30100 -7.061 0.00000 ## ## coef Se ## Residual standard error: 4.08242 0.03854 pred_lcmm5_lin &lt;- predictY(lcmm5_lin, data.frame(ola = 1:4)) plot(pred_lcmm5_lin, ylim = c(0, 27)) summary(lcmm6_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 6, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1913 ## Number of observations: 7518 ## Number of latent classes: 6 ## Number of parameters: 18 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 23 ## Convergence criteria: parameters= 9.1e-07 ## : likelihood= 2.7e-07 ## : second derivatives= 6.9e-12 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22530.07 ## AIC: 45096.14 ## BIC: 45196.16 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 1.60297 0.20813 7.702 0.00000 ## intercept class2 0.46935 0.31592 1.486 0.13738 ## intercept class3 -0.62593 0.31556 -1.984 0.04731 ## intercept class4 1.96928 3.89319 0.506 0.61298 ## intercept class5 1.78706 4.66863 0.383 0.70188 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 7.05192 0.91689 7.691 0.00000 ## intercept class2 17.29622 1.14057 15.165 0.00000 ## intercept class3 19.54452 1.02641 19.042 0.00000 ## intercept class4 2.99013 0.33842 8.836 0.00000 ## intercept class5 2.99012 0.38516 7.763 0.00000 ## intercept class6 3.60755 0.92206 3.912 0.00009 ## ola class1 0.49308 0.29315 1.682 0.09257 ## ola class2 -2.12546 0.30066 -7.069 0.00000 ## ola class3 -0.59844 0.39191 -1.527 0.12677 ## ola class4 0.39012 0.11619 3.358 0.00079 ## ola class5 0.39012 0.13164 2.964 0.00304 ## ola class6 3.71429 0.33486 11.092 0.00000 ## ## coef Se ## Residual standard error: 4.08242 0.03853 pred_lcmm6_lin &lt;- predictY(lcmm6_lin, data.frame(ola = 1:4)) plot(pred_lcmm6_lin, ylim = c(0, 27)) "],["variables-modelo.html", "Capítulo 3 Variables modelo Agregar variables de trayectoria de los distintos modelos Agregar variables independientes 3.1 Crear y agregar trayectorias de variables independientes 3.2 Guardar datos para usar después", " Capítulo 3 Variables modelo Agregar variables de trayectoria de los distintos modelos elsoc_salud_modelo &lt;- elsoc_salud elsoc_salud_modelo$trayectoria_gmm.4lin &lt;- factor(elsoc_salud %&gt;% left_join(lcmm4_lin$pprob %&gt;% select(idencuesta, class), by = &#39;idencuesta&#39;) %&gt;% pull(class), levels = c(3, 1, 2, 4), labels = c(&#39;Trayectoria baja&#39;, &#39;Trayectoria media/moderada&#39;, &#39;Trayectoria Severa&#39;, &#39;Trayectoria ascendente&#39;)) elsoc_salud_modelo$trayectoria_gmm.5lin &lt;- factor(elsoc_salud %&gt;% left_join(lcmm5_lin$pprob %&gt;% select(idencuesta, class), by = &#39;idencuesta&#39;) %&gt;% pull(class), levels = c(2, 4, 5, 3, 1), labels = c(&#39;Trayectoria baja-media&#39;, &#39;Trayectoria media-moderada&#39;, &#39;Trayectoria descendente&#39;, &#39;Trayectoria ascendente&#39;, &#39;Trayectoria alta-moderada&#39;)) sjmisc::frq(elsoc_salud_modelo$trayectoria_gmm.4lin) ## x &lt;categorical&gt; ## # total N=1789 valid N=1789 mean=1.43 sd=0.77 ## ## Value | N | Raw % | Valid % | Cum. % ## ------------------------------------------------------------ ## Trayectoria baja | 1258 | 70.32 | 70.32 | 70.32 ## Trayectoria media/moderada | 364 | 20.35 | 20.35 | 90.67 ## Trayectoria Severa | 95 | 5.31 | 5.31 | 95.98 ## Trayectoria ascendente | 72 | 4.02 | 4.02 | 100.00 ## &lt;NA&gt; | 0 | 0.00 | &lt;NA&gt; | &lt;NA&gt; sjmisc::frq(elsoc_salud_modelo$trayectoria_gmm.5lin) ## x &lt;categorical&gt; ## # total N=1789 valid N=1789 mean=1.58 sd=0.97 ## ## Value | N | Raw % | Valid % | Cum. % ## ------------------------------------------------------------ ## Trayectoria baja-media | 1168 | 65.29 | 65.29 | 65.29 ## Trayectoria media-moderada | 375 | 20.96 | 20.96 | 86.25 ## Trayectoria descendente | 123 | 6.88 | 6.88 | 93.12 ## Trayectoria ascendente | 78 | 4.36 | 4.36 | 97.48 ## Trayectoria alta-moderada | 45 | 2.52 | 2.52 | 100.00 ## &lt;NA&gt; | 0 | 0.00 | &lt;NA&gt; | &lt;NA&gt; Agregar variables independientes elsoc_salud_modelo &lt;- elsoc_salud_modelo %&gt;% filter(!elsoc::is_nsnr(m30_w01, m30_w02, m30_w03, m30_w04, m30b_w05)) %&gt;% mutate( # Variables de ingreso: m30_w01 = 1000*as.numeric(car::recode(m30_w01, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w01_imp = ifelse(is_nsnr(m29_w01), m30_w01, m29_w01), ypc_w01 = m29_w01_imp / nhogar1_w01, m30_w02 = 1000*as.numeric(car::recode(m30_w02, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w02_imp = ifelse(is_nsnr(m29_w02), m30_w02, m29_w02), ypc_w02 = m29_w02_imp / nhogar1_w01, m30_w03 = 1000*as.numeric(car::recode(m30_w03, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w03_imp = ifelse(is_nsnr(m29_w03), m30_w03, m29_w03), ypc_w03 = m29_w03_imp / ifelse(is_nsnr(m54_w03), NA, m54_w03), m30_w04 = 1000*as.numeric(car::recode(m30_w04, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w04_imp = ifelse(is_nsnr(m29_w04), m30_w04, m29_w04), ypc_w04 = m29_w04_imp / ifelse(is_nsnr(m54_w04), NA, m54_w04), log_ing = log((ypc_w01 + ypc_w02 + ypc_w03 + ypc_w04)/5), quintil_w01 = statar::xtile(ypc_w01, n = 5, wt = ponderador02_w01), quintil_w01 = factor(quintil_w01, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w02 = statar::xtile(ypc_w02, n = 5, wt = ponderador02_w02), quintil_w02 = factor(quintil_w02, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w03 = statar::xtile(ypc_w03, n = 5, wt = ponderador02_w03), quintil_w03 = factor(quintil_w03, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w04 = statar::xtile(ypc_w04, n = 5, wt = ponderador02_w04), quintil_w04 = factor(quintil_w04, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), # Nivel educacional: educ_w01 = factor(car::recode(m01_w01, recodes = &quot;1:3 = 1; 4:5 = 2; 6:7 = 3; 8:10 = 4&quot;), levels = 1:4, labels = c(&quot;Basica&quot;, &quot;Media&quot;, &quot;Tecnica&quot;, &quot;Universitaria&quot;)), # Situación ocupacional: ocup_w01 = factor(car::recode(m02_w01, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup_w02 = factor(car::recode(m02_w02, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup_w03 = factor(car::recode(m02_w03, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup_w04 = factor(car::recode(m02_w04, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), # Insatisfacción con el ingreso insatisf_ing_w01 = factor(m16_w01 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w02 = factor(m16_w02 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w03 = factor(m16_w03 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w04 = factor(m16_w04 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), # Sobrecarga de deudas sobrecarga_deuda_w01 = factor(car::recode(m43_w01, &quot;1:2 = 1; 4:5 = 2; else = NA&quot;), labels = c(&#39;Nada/No muy sobrecargado&#39;, &#39;Bastante/Muy sobrecargado&#39;)), sobrecarga_deuda_w03 = factor(car::recode(m43_w03, &quot;1:2 = 1; 4:5 = 2; else = NA&quot;), labels = c(&#39;Nada/No muy sobrecargado&#39;, &#39;Bastante/Muy sobrecargado&#39;)), # Apoyo social apoyo_social_w01 = factor(s12_w01 %in% 4:5, labels = c(&#39;Sin apoyo social&#39;, &#39;Con apoyo social&#39;)), apoyo_social_w03 = factor(s12_w03 %in% 4:5, labels = c(&#39;Sin apoyo social&#39;, &#39;Con apoyo social&#39;)), # Actividad física regular activ_fisica_w01 = factor(s04_w01 %in% 1:3, labels = c(&#39;Sin actividad fisica regular&#39;, &#39;Con actividad fisica regular&#39;)), activ_fisica_w03 = factor(s04_w03 %in% 1:3, labels = c(&#39;Sin actividad fisica regular&#39;, &#39;Con actividad fisica regular&#39;)), # Fumador fuma_w01 = factor(s08_w01 &gt;= 1, labels = c(&#39;No fuma&#39;, &#39;Fumador&#39;)), fuma_w03 = factor(s08_w03 &gt;= 1, labels = c(&#39;No fuma&#39;, &#39;Fumador&#39;)), # IMC imc_w01 = ifelse(is_nsnr(s06_w01), NA, s06_w01) / (ifelse(is_nsnr(s05_w01), NA, s05_w01/100))^2, imc_w03 = ifelse(is_nsnr(s06_w03), NA, s06_w03) / (ifelse(is_nsnr(s05_w03), NA, s05_w03/100))^2, # Personalidad s22_01_w02 = ifelse(is_nsnr(s22_01_w02), NA, s22_01_w02), s22_02_w02 = ifelse(is_nsnr(s22_02_w02), NA, s22_02_w02), s22_03_w02 = ifelse(is_nsnr(s22_03_w02), NA, s22_03_w02), s22_04_w02 = ifelse(is_nsnr(s22_04_w02), NA, s22_04_w02), s22_05_w02 = ifelse(is_nsnr(s22_05_w02), NA, s22_05_w02), s22_06_w02 = ifelse(is_nsnr(s22_06_w02), NA, s22_06_w02), s22_07_w02 = ifelse(is_nsnr(s22_07_w02), NA, s22_07_w02), s22_08_w02 = ifelse(is_nsnr(s22_08_w02), NA, s22_08_w02), s22_09_w02 = ifelse(is_nsnr(s22_09_w02), NA, s22_09_w02), s22_10_w02 = ifelse(is_nsnr(s22_10_w02), NA, s22_10_w02), extraversion_w02 = 6 - (s22_01_w02) + s22_06_w02 , agreeableness_w02 = s22_02_w02 + 6 - s22_07_w02, conscientiousness_w02 = 6 - s22_03_w02 + s22_08_w02 , neuroticism_w02 = 6 - s22_04_w02 + s22_09_w02, openness_w02 = 6 - s22_05_w02 + s22_10_w02, # Direccion vida proyecto_vida_w03 = factor(s30_01_w03 %in% 4:5, labels = c(&#39;No decidido dirección de vida&#39;, &#39;Decidido dirección de vida&#39;)), # Desigualdad percibida percepcion_desigualdad_w01 = factor(c18_11_w01 %in% 4:5, labels = c(&#39;Desigualdad no muy grande&#39;, &#39;Desigualdad muy grande&#39;)), percepcion_desigualdad_w02 = factor(c18_11_w02 %in% 4:5, labels = c(&#39;Desigualdad no muy grande&#39;, &#39;Desigualdad muy grande&#39;)), percepcion_desigualdad_w03 = factor(c18_11_w03 %in% 4:5, labels = c(&#39;Desigualdad no muy grande&#39;, &#39;Desigualdad muy grande&#39;)), percepcion_desigualdad_w04 = factor(c18_11_w04 %in% 4:5, labels = c(&#39;Desigualdad no muy grande&#39;, &#39;Desigualdad muy grande&#39;)) ) 3.1 Crear y agregar trayectorias de variables independientes comparar_clusters &lt;- function(.data, vars, K = 10) { seq &lt;- TraMineR::seqdef(.data, var = vars, weights = .data$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range &lt;- WeightedCluster::as.clustrange(ward, diss = dist, ncluster = K) # Visualizar clusters: ward.range$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) } trayectoria &lt;- function(.data, vars, K, olas = 2016:2019, MISSING = TRUE, ...) { seq &lt;- TraMineR::seqdef(.data, var = vars, ..., weights = .data$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = MISSING) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) TraMineR::seqIplot(seq, group = stats::cutree(ward, k = K), border = NA, space = 0, idxs = 0, xtlab = olas) TraMineR::seqdplot(seq, group = stats::cutree(ward, k = K), border = NA, space = 0) } Situación ocupacional (4 categorías) comparar_clusters(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 5) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 6) # Agregar trayectoria de 6 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_ocup &lt;- factor(stats::cutree(ward, k = 6), levels = c(3, 1, 4, 2, 5, 6), labels = c(&#39;Ocupados estables&#39;, &#39;Oscilan entre inactividad y ocupacion&#39;, &#39;Ocupados con períodos sin ocupación&#39;, &#39;Mayoritariamente inactivos&#39;, &#39;Mayoritariamente trabajo no remunerado&#39;, &#39;Mayoritariamente desempleados&#39;)) Sobrecarga por deudas comparar_clusters(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 5) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 6) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_deuda &lt;- factor(stats::cutree(ward, k = 5), levels = c(4, 3, 1, 2), labels = c(&#39;Nada/No muy sobrecargados deuda&#39;, &#39;Reducción sobrecarga deuda&#39;, &#39;Aumento sobrecarga deuda&#39;, &#39;Bastante/muy sobrecargados deuda&#39;)) Actividad física regular comparar_clusters(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 2) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), olas = c(2016, 2018), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_activ_fisica &lt;- factor(stats::cutree(ward, k = 4), levels = c(2, 3, 4, 1), labels = c(&#39;Sin actividad fisica persistente&#39;, &#39;Abandonan actividad fisica en 2021&#39;, &#39;Se activan en 2021&#39;, &#39;Con actividad fisica persistente&#39;)) Apoyo social comparar_clusters(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), olas = c(2016, 2018), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), olas = c(2016, 2018), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), olas = c(2016, 2018), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;apoyo_social_w01&#39;, &#39;apoyo_social_w03&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_apoyo_social &lt;- factor(stats::cutree(ward, k = 4), levels = c(2, 3, 1, 4), labels = c(&#39;Sin apoyo social persistente&#39;, &#39;Apoyo social decreciente&#39;, &#39;Apoyo social creciente&#39;, &#39;Con apoyo social persistente&#39;)) 3.2 Guardar datos para usar después save(elsoc_salud_modelo, file = &#39;datos_salud_modelo.RData&#39;) # sjlabelled::write_stata(x = elsoc_salud_modelo %&gt;% # rename(trayectoria_om4_4 = trayectoria_om4.4, # trayectoria_om4_5 = trayectoria_om4.5, # trayectoria_gmm_4lin = trayectoria_gmm.4lin, # trayectoria_gmm_5lin = trayectoria_gmm.5lin # ), # path = &#39;datos_salud_modelo.dta&#39;) "],["modelo-multinomial-logit.html", "Capítulo 4 Modelo multinomial logit 4.1 Comparación trayectorias 4.2 Variable dependiente: Trayectorias LCMM 4 clases 4.3 Variable dependiente: Trayectorias LCMM 5 clases", " Capítulo 4 Modelo multinomial logit load(&#39;datos_salud_modelo.RData&#39;) 4.1 Comparación trayectorias with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_gmm.4lin, trayectoria_gmm.5lin, bias.correct = TRUE)) ## Cramer V ## 0.8303 4.2 Variable dependiente: Trayectorias LCMM 4 clases m1 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup, data = ., weights = ponderador02_w01) ## # weights: 64 (45 variable) ## initial value 1734.839267 ## iter 10 value 1157.039491 ## iter 20 value 1012.007063 ## iter 30 value 951.465629 ## iter 40 value 950.565660 ## final value 950.565305 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida_w03 + apoyo_social_w01, data = ., weights = ponderador02_w01) ## # weights: 92 (66 variable) ## initial value 1608.712819 ## iter 10 value 1472.628465 ## iter 20 value 957.136448 ## iter 30 value 886.606794 ## iter 40 value 856.435906 ## iter 50 value 842.183951 ## iter 60 value 841.957709 ## iter 70 value 841.929301 ## final value 841.929054 ## converged m3 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida_w03 + apoyo_social_w01 + extraversion_w02 + agreeableness_w02 + conscientiousness_w02 + neuroticism_w02 + openness_w02, data = ., weights = ponderador02_w01) ## # weights: 112 (81 variable) ## initial value 1591.597629 ## iter 10 value 1489.651442 ## iter 20 value 1062.716259 ## iter 30 value 872.597357 ## iter 40 value 822.442696 ## iter 50 value 792.031793 ## iter 60 value 779.615744 ## iter 70 value 778.469567 ## iter 80 value 778.448723 ## final value 778.447475 ## converged modelsummary::modelsummary(list(m1, m2, m3), estimate = &quot;{estimate}{stars}&quot;, statistic = NULL, stars = c(&#39;*&#39; = .05, &#39;**&#39; = .01, &#39;***&#39; = .001), shape = term + response ~ model, exponentiate = TRUE) Model 1 Model 2 Model 3 (Intercept) Trayectoria media/moderada 5.798 3.059 2.483 Trayectoria Severa 0.038 0.694 0.214 Trayectoria ascendente 0.030 0.477 1.443 m0_sexo_w01 Trayectoria media/moderada 2.673*** 2.870*** 2.592*** Trayectoria Severa 4.462*** 5.933*** 5.444*** Trayectoria ascendente 4.415*** 3.790*** 2.917** m0_edad_w01 Trayectoria media/moderada 0.974*** 0.972*** 0.978*** Trayectoria Severa 0.985 0.980 0.985 Trayectoria ascendente 0.972** 0.971** 0.966** log_ing Trayectoria media/moderada 0.740** 0.819 0.818 Trayectoria Severa 0.724 0.690 0.819 Trayectoria ascendente 0.973 0.829 0.600* trayectoria_deudaReducción sobrecarga deuda Trayectoria media/moderada 1.184 1.316 1.288 Trayectoria Severa 1.482 1.393 1.974 Trayectoria ascendente 1.904 2.327* 3.007* trayectoria_deudaAumento sobrecarga deuda Trayectoria media/moderada 0.658 0.744 0.835 Trayectoria Severa 1.687 1.488 1.850 Trayectoria ascendente 1.002 1.339 1.848 trayectoria_deudaBastante/muy sobrecargados deuda Trayectoria media/moderada 1.699* 1.554 1.621 Trayectoria Severa 3.261* 2.688 4.028* Trayectoria ascendente 1.915 1.966 2.509 trayectoria_apoyo_socialApoyo social decreciente Trayectoria media/moderada 1.579 1.441 1.351 Trayectoria Severa 4.980* 1.124 0.740 Trayectoria ascendente 0.543 0.482 0.460 trayectoria_apoyo_socialApoyo social creciente Trayectoria media/moderada 2.859*** 2.584* 2.406 Trayectoria Severa 12.699*** 2.862 1.975 Trayectoria ascendente 1.543 1.384 2.571 trayectoria_apoyo_socialCon apoyo social persistente Trayectoria media/moderada 0.790 0.811 0.939 Trayectoria Severa 2.164 2.445 3.371 Trayectoria ascendente 0.185*** 0.205*** 0.221** trayectoria_ocupOscilan entre inactividad y ocupacion Trayectoria media/moderada 0.588 0.561 0.545 Trayectoria Severa 5.646** 5.555** 7.299** Trayectoria ascendente 2.075 2.433 1.958 trayectoria_ocupOcupados con períodos sin ocupación Trayectoria media/moderada 0.693 0.719 0.722 Trayectoria Severa 1.708 1.495 1.699 Trayectoria ascendente 1.133 0.868 0.817 trayectoria_ocupMayoritariamente inactivos Trayectoria media/moderada 1.877** 1.771* 1.547 Trayectoria Severa 2.182 2.136 2.096 Trayectoria ascendente 1.083 1.147 0.584 trayectoria_ocupMayoritariamente trabajo no remunerado Trayectoria media/moderada 0.723 0.726 0.658 Trayectoria Severa 2.456 2.518 2.389 Trayectoria ascendente 1.304 1.231 1.084 trayectoria_ocupMayoritariamente desempleados Trayectoria media/moderada 2.782* 1.914 1.860 Trayectoria Severa 4.762 5.381* 6.550* Trayectoria ascendente 0.663 0.499 0.458 trayectoria_activ_fisicaAbandonan actividad fisica en 2021 Trayectoria media/moderada 0.642 0.646 Trayectoria Severa 0.187 0.183 Trayectoria ascendente 0.098** 0.092** trayectoria_activ_fisicaSe activan en 2021 Trayectoria media/moderada 0.340* 0.418 Trayectoria Severa 1.821 2.195 Trayectoria ascendente 0.456 0.521 trayectoria_activ_fisicaCon actividad fisica persistente Trayectoria media/moderada 0.977 0.790 Trayectoria Severa 0.658 0.609 Trayectoria ascendente 1.058 0.629 fuma_w01Fumador Trayectoria media/moderada 1.718** 1.769** Trayectoria Severa 0.803 0.794 Trayectoria ascendente 1.817* 1.913* imc_w01 Trayectoria media/moderada 1.003 1.005 Trayectoria Severa 1.002 1.004 Trayectoria ascendente 1.002 1.005 proyecto_vida_w03Decidido dirección de vida Trayectoria media/moderada 0.469*** 0.521** Trayectoria Severa 0.355** 0.387* Trayectoria ascendente 0.544 0.530 apoyo_social_w01Con apoyo social Trayectoria media/moderada 0.822 0.764 Trayectoria Severa 0.216 0.147 Trayectoria ascendente 0.714 1.219 extraversion_w02 Trayectoria media/moderada 0.935 Trayectoria Severa 0.692* Trayectoria ascendente 0.995 agreeableness_w02 Trayectoria media/moderada 0.839** Trayectoria Severa 0.848 Trayectoria ascendente 0.993 conscientiousness_w02 Trayectoria media/moderada 0.885* Trayectoria Severa 0.874 Trayectoria ascendente 0.978 neuroticism_w02 Trayectoria media/moderada 1.361*** Trayectoria Severa 1.684*** Trayectoria ascendente 1.297** openness_w02 Trayectoria media/moderada 1.135* Trayectoria Severa 1.027 Trayectoria ascendente 1.219* Num.Obs. 1232 1144 1130 AIC 1991.1 1809.9 1712.9 BIC 2221.4 2127.5 2105.2 RMSE 0.34 0.33 0.32 4.3 Variable dependiente: Trayectorias LCMM 5 clases m1 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.5lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup, data = ., weights = ponderador02_w01) ## # weights: 80 (60 variable) ## initial value 2014.086017 ## iter 10 value 1425.632906 ## iter 20 value 1220.333415 ## iter 30 value 1157.490955 ## iter 40 value 1141.758448 ## iter 50 value 1141.589592 ## iter 60 value 1141.585347 ## final value 1141.584803 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.5lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida_w03 + apoyo_social_w01, data = ., weights = ponderador02_w01) ## # weights: 115 (88 variable) ## initial value 1867.657746 ## iter 10 value 1259.729583 ## iter 20 value 1080.084393 ## iter 30 value 1028.926670 ## iter 40 value 1016.810496 ## iter 50 value 1014.030510 ## iter 60 value 1013.828750 ## iter 70 value 1013.815771 ## final value 1013.815675 ## converged m3 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.5lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_apoyo_social + trayectoria_ocup + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida_w03 + apoyo_social_w01 + extraversion_w02 + agreeableness_w02 + conscientiousness_w02 + neuroticism_w02 + openness_w02, data = ., weights = ponderador02_w01) ## # weights: 140 (108 variable) ## initial value 1847.787625 ## iter 10 value 1235.006302 ## iter 20 value 1078.512194 ## iter 30 value 1006.834633 ## iter 40 value 973.627532 ## iter 50 value 945.520748 ## iter 60 value 938.771805 ## iter 70 value 937.583996 ## iter 80 value 937.467767 ## iter 90 value 937.455147 ## iter 100 value 937.454835 ## final value 937.454835 ## stopped after 100 iterations modelsummary::modelsummary(list(m1, m2, m3), estimate = &quot;{estimate}{stars}&quot;, statistic = NULL, stars = c(&#39;*&#39; = .05, &#39;**&#39; = .01, &#39;***&#39; = .001), shape = term + response ~ model, exponentiate = TRUE) Model 1 Model 2 Model 3 (Intercept) Trayectoria media-moderada 11.558 3.269 2.722 Trayectoria descendente 11.149 2.797 3.232 Trayectoria ascendente 0.102 1.271 0.144 Trayectoria alta-moderada 0.307 4.127 5.258 m0_sexo_w01 Trayectoria media-moderada 2.370*** 2.928*** 2.644*** Trayectoria descendente 3.633*** 3.733*** 3.344*** Trayectoria ascendente 5.553*** 5.214*** 4.307*** Trayectoria alta-moderada 2.724* 3.247* 3.494* m0_edad_w01 Trayectoria media-moderada 0.977*** 0.974*** 0.978*** Trayectoria descendente 0.997 0.997 1.004 Trayectoria ascendente 0.963*** 0.962*** 0.966** Trayectoria alta-moderada 0.982 0.972* 0.973 log_ing Trayectoria media-moderada 0.716** 0.808 0.752* Trayectoria descendente 0.525** 0.586* 0.606* Trayectoria ascendente 0.897 0.744 0.641 Trayectoria alta-moderada 0.626 0.628 0.699 trayectoria_deudaReducción sobrecarga deuda Trayectoria media-moderada 1.245 1.604* 1.655* Trayectoria descendente 1.713 1.802 1.931 Trayectoria ascendente 1.352 1.544 1.638 Trayectoria alta-moderada 1.175 1.134 1.451 trayectoria_deudaAumento sobrecarga deuda Trayectoria media-moderada 0.849 1.106 1.288 Trayectoria descendente 1.859 1.936 2.768* Trayectoria ascendente 0.593 0.771 0.887 Trayectoria alta-moderada 0.681 0.661 0.510 trayectoria_deudaBastante/muy sobrecargados deuda Trayectoria media-moderada 1.784* 1.971* 2.110** Trayectoria descendente 3.149** 2.865* 3.500** Trayectoria ascendente 1.128 1.094 1.088 Trayectoria alta-moderada 3.072 2.452 3.504 trayectoria_apoyo_socialApoyo social decreciente Trayectoria media-moderada 1.312 1.293 1.159 Trayectoria descendente 2.004 1.261 1.429 Trayectoria ascendente 0.228* 0.357 0.146 Trayectoria alta-moderada 5.532* 2.212 2.046 trayectoria_apoyo_socialApoyo social creciente Trayectoria media-moderada 2.420*** 2.574* 2.558* Trayectoria descendente 2.987** 2.566 2.543 Trayectoria ascendente 1.733 2.740 1.491 Trayectoria alta-moderada 12.280*** 5.104 5.902 trayectoria_apoyo_socialCon apoyo social persistente Trayectoria media-moderada 0.691 0.710 0.868 Trayectoria descendente 1.182 1.020 1.199 Trayectoria ascendente 0.128*** 0.138*** 0.141*** Trayectoria alta-moderada 1.966 2.248 2.942 trayectoria_ocupOscilan entre inactividad y ocupacion Trayectoria media-moderada 0.416* 0.436 0.413* Trayectoria descendente 1.486 1.425 1.579 Trayectoria ascendente 2.151 2.576 1.982 Trayectoria alta-moderada 8.829** 8.081** 7.259* trayectoria_ocupOcupados con períodos sin ocupación Trayectoria media-moderada 0.716 0.687 0.668 Trayectoria descendente 1.046 1.208 1.169 Trayectoria ascendente 1.342 0.976 0.875 Trayectoria alta-moderada 3.961* 3.059 3.258 trayectoria_ocupMayoritariamente inactivos Trayectoria media-moderada 1.435 1.272 1.049 Trayectoria descendente 1.330 1.147 0.975 Trayectoria ascendente 1.410 1.424 1.047 Trayectoria alta-moderada 4.029 3.426 3.076 trayectoria_ocupMayoritariamente trabajo no remunerado Trayectoria media-moderada 0.757 0.593 0.494* Trayectoria descendente 0.416 0.398 0.286* Trayectoria ascendente 1.415 1.162 1.009 Trayectoria alta-moderada 7.581** 7.239** 5.626* trayectoria_ocupMayoritariamente desempleados Trayectoria media-moderada 1.028 0.529 0.445 Trayectoria descendente 3.805* 3.631 2.708 Trayectoria ascendente 3.091 2.130 2.015 Trayectoria alta-moderada 15.266** 14.674** 15.076** trayectoria_activ_fisicaAbandonan actividad fisica en 2021 Trayectoria media-moderada 0.795 0.820 Trayectoria descendente 0.595 0.591 Trayectoria ascendente 0.103** 0.094** Trayectoria alta-moderada 0.081 0.082 trayectoria_activ_fisicaSe activan en 2021 Trayectoria media-moderada 0.316** 0.399* Trayectoria descendente 1.111 1.432 Trayectoria ascendente 0.432 0.518 Trayectoria alta-moderada 0.379 0.618 trayectoria_activ_fisicaCon actividad fisica persistente Trayectoria media-moderada 0.919 0.686 Trayectoria descendente 0.699 0.591 Trayectoria ascendente 1.206 0.975 Trayectoria alta-moderada 0.525 0.518 fuma_w01Fumador Trayectoria media-moderada 1.243 1.320 Trayectoria descendente 1.924* 2.281** Trayectoria ascendente 1.752 1.786 Trayectoria alta-moderada 0.530 0.536 imc_w01 Trayectoria media-moderada 1.005 1.008 Trayectoria descendente 1.007 1.010 Trayectoria ascendente 1.006 1.009 Trayectoria alta-moderada 1.006 1.009 proyecto_vida_w03Decidido dirección de vida Trayectoria media-moderada 0.453*** 0.505** Trayectoria descendente 0.990 1.152 Trayectoria ascendente 0.461* 0.458* Trayectoria alta-moderada 0.250** 0.304* apoyo_social_w01Con apoyo social Trayectoria media-moderada 0.982 0.918 Trayectoria descendente 0.864 0.889 Trayectoria ascendente 1.298 0.662 Trayectoria alta-moderada 0.366 0.436 extraversion_w02 Trayectoria media-moderada 0.954 Trayectoria descendente 0.776* Trayectoria ascendente 1.088 Trayectoria alta-moderada 0.686* agreeableness_w02 Trayectoria media-moderada 0.868* Trayectoria descendente 0.804* Trayectoria ascendente 1.099 Trayectoria alta-moderada 0.862 conscientiousness_w02 Trayectoria media-moderada 0.926 Trayectoria descendente 0.792* Trayectoria ascendente 0.977 Trayectoria alta-moderada 0.937 neuroticism_w02 Trayectoria media-moderada 1.430*** Trayectoria descendente 1.745*** Trayectoria ascendente 1.527*** Trayectoria alta-moderada 1.501** openness_w02 Trayectoria media-moderada 1.112* Trayectoria descendente 1.078 Trayectoria ascendente 1.193 Trayectoria alta-moderada 0.881 Num.Obs. 1232 1144 1130 AIC 2403.2 2195.6 2082.9 BIC 2710.2 2619.2 2606.0 RMSE 0.32 0.32 0.31 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
