[["index.html", "Trayectorias de sintomatología depresiva Cargar y preparar datos ELSOC 0.1 Cargar librerías", " Trayectorias de sintomatología depresiva Álvaro Jiménez, Fabián Duarte, Edgardo Cerda Cargar y preparar datos ELSOC 0.1 Cargar librerías # Librerías básicas library(tidyverse) library(sjlabelled) # Librerias análisis de secuencia library(TraMineR) library(TraMineRextras) library(WeightedCluster) library(cluster) # Librería ELSOC library(elsoc) # Librerias graficos library(ggpubr) library(shiny) library(plotly) # Libreria analisis estadístico library(nnet) library(modelsummary) library(lcmm) library(rcompanion) library(statar) # Cargar datos ELSOC: elsoc::load_elsoc(data = &#39;wide&#39;) # Crear variables de sintomatología depresiva por ola: elsoc_salud &lt;- elsoc_wide_2016_2021 %&gt;% # Se conservan observaciones presentes en las 5 olas filter(tipo_atricion == 1) %&gt;% # Crear variables de PHQ9 purrr::map_at(.at = vars(starts_with(&#39;s11_0&#39;)), .f = function(s) car::recode(s, &quot;1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA&quot;)) %&gt;% as.data.frame() %&gt;% mutate(phq9_w01 = (s11_01_w01 + s11_02_w01 + s11_03_w01 + s11_04_w01 + s11_05_w01 + s11_06_w01 + s11_07_w01 + s11_08_w01 + s11_09_w01), phq9_w02 = (s11_01_w02 + s11_02_w02 + s11_03_w02 + s11_04_w02 + s11_05_w02 + s11_06_w02 + s11_07_w02 + s11_08_w02 + s11_09_w02), phq9_w03 = (s11_01_w03 + s11_02_w03 + s11_03_w03 + s11_04_w03 + s11_05_w03 + s11_06_w03 + s11_07_w03 + s11_08_w03 + s11_09_w03), phq9_w04 = (s11_01_w04 + s11_02_w04 + s11_03_w04 + s11_04_w04 + s11_05_w04 + s11_06_w04 + s11_07_w04 + s11_08_w04 + s11_09_w04), phq9_w05 = (s11_01_w05 + s11_02_w05 + s11_03_w05 + s11_04_w05 + s11_05_w05 + s11_06_w05 + s11_07_w05 + s11_08_w05 + s11_09_w05)) %&gt;% # Quitar NAs filter(!is.na(phq9_w01), !is.na(phq9_w02), !is.na(phq9_w03), !is.na(phq9_w04), !is.na(phq9_w05)) %&gt;% # Crear indicador de depresión en 4 y en 2 categorías: mutate(depr4_w01 = car::recode(phq9_w01, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w02 = car::recode(phq9_w02, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w03 = car::recode(phq9_w03, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w04 = car::recode(phq9_w04, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr4_w05 = car::recode(phq9_w05, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr2_w01 = car::recode(phq9_w01, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w02 = car::recode(phq9_w02, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w03 = car::recode(phq9_w03, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w04 = car::recode(phq9_w04, &quot;0:9 = 0; 10:27 = 1&quot;), depr2_w05 = car::recode(phq9_w05, &quot;0:9 = 0; 10:27 = 1&quot;), phq_sum = depr4_w01 + depr4_w02 + depr4_w03 + depr4_w04 + depr4_w05 ) # Cargar datos ELSOC LONG: elsoc::load_elsoc(data = &#39;long&#39;) # Crear variables de sintomatología depresiva por ola LONG: elsoc_salud_long &lt;- elsoc_long_2016_2021 %&gt;% # Se conservan observaciones presentes en las 5 olas filter(tipo_atricion == 1) %&gt;% # Crear variables de PHQ9 purrr::map_at(.at = vars(starts_with(&#39;s11_0&#39;)), .f = function(s) car::recode(s, &quot;1 = 0; 2 = 1; 3 = 2; c(4, 5) = 3; c(-888, -999) = NA&quot;)) %&gt;% as.data.frame() %&gt;% mutate(phq9 = (s11_01 + s11_02 + s11_03 + s11_04 + s11_05 + s11_06 + s11_07 + s11_08 + s11_09)) %&gt;% # Quitar NAs filter(!is.na(phq9)) %&gt;% # Crear indicador de depresión en 4 y en 2 categorías: mutate(depr4 = car::recode(phq9, &quot;0:4 = 1; 5:9 = 2; 10:14 = 3; 15:27 = 4&quot;), depr2 = car::recode(phq9, &quot;0:9 = 0; 10:27 = 1&quot;)) "],["trayectorias-de-sintomatología-depresiva.-modelo-optimal-matching.html", "Capítulo 1 Trayectorias de sintomatología depresiva. Modelo Optimal-Matching 1.1 Secuencia de depresión con 4 categorías: 1.2 Secuencia de depresión con 2 categorías", " Capítulo 1 Trayectorias de sintomatología depresiva. Modelo Optimal-Matching 1.1 Secuencia de depresión con 4 categorías: # Crear objeto con secuencias seq.depr4 &lt;- TraMineR::seqdef(elsoc_salud, var = c(&#39;depr4_w01&#39;, &#39;depr4_w02&#39;, &#39;depr4_w03&#39;, &#39;depr4_w04&#39;, &#39;depr4_w05&#39;), states = c(&#39;Sin síntomas&#39;, &#39;Síntomas medios&#39;, &#39;Síntomas moderados&#39;, &#39;Síntomas severos&#39;), labels = c(&#39;Sin síntomas&#39;, &#39;Síntomas medios&#39;, &#39;Sintomas moderados&#39;, &#39;Síntomas severos&#39;), weights = elsoc_salud$ponderador02_w01, cpal = c(&#39;lightgreen&#39;, &#39;mediumturquoise&#39;, &#39;skyblue3&#39;, &#39;slateblue4&#39;)) 1.1.1 Gráfico de secuencias: Muestra todas las secuencias, ordenadas según la suma total del indice phq9 (sumando las 5 olas) TraMineR::seqIplot(seq.depr4, border = NA, xtlab = c(2016:2019, 2021), space = 0, sortv = elsoc_salud$phq_sum) 1.1.2 Frecuencia de estados y transiciones seqstatd(seq.depr4) ## [State frequencies] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 depr4_w05 ## Sin síntomas 0.480 0.49 0.44 0.37 0.496 ## Síntomas medios 0.303 0.30 0.32 0.38 0.297 ## Síntomas moderados 0.145 0.11 0.14 0.15 0.118 ## Síntomas severos 0.072 0.10 0.10 0.10 0.089 ## ## [Valid states] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 depr4_w05 ## N 1387 1387 1387 1387 1387 ## ## [Entropy index] ## depr4_w01 depr4_w02 depr4_w03 depr4_w04 depr4_w05 ## H 0.85 0.86 0.89 0.9 0.85 seqtrate(seq.depr4) ## [-&gt; Sin síntomas] [-&gt; Síntomas medios] ## [Sin síntomas -&gt;] 0.6315011 0.2732770 ## [Síntomas medios -&gt;] 0.3831385 0.4058737 ## [Síntomas moderados -&gt;] 0.1763785 0.3718435 ## [Síntomas severos -&gt;] 0.1974423 0.2106458 ## [-&gt; Síntomas moderados] [-&gt; Síntomas severos] ## [Sin síntomas -&gt;] 0.05812547 0.03709645 ## [Síntomas medios -&gt;] 0.14048374 0.07050413 ## [Síntomas moderados -&gt;] 0.24994502 0.20183294 ## [Síntomas severos -&gt;] 0.25802652 0.33388539 1.1.3 Clusters de secuencias: # Medir distancias entre secuencias usando analisis de secuencias usando optimal matching analysis # Se define matriz de costos de sustitución basados en valores medios de indice phq9 substitution_cost_matrix &lt;- as.matrix(rbind(c(0, 5, 10, 19), c(5, 0, 5, 14), c(10, 5, 0, 9), c(19, 14, 9, 0))) dist.depr4 &lt;- TraMineR::seqdist(seq.depr4, method = &quot;OM&quot;, sm = substitution_cost_matrix) # Construir tipos de trayectorias con analisis de cluster jerarquico Ward ward.depr4 &lt;- cluster::agnes(dist.depr4, diss = TRUE, method = &#39;ward&#39;) Indicadores de calidad de partición: Se evalúa según los indicadores: kableExtra::kbl(data.frame(indicador = c(&#39;Point Biserial Correlation&#39;, &quot;Hubert&#39;s Somers&#39; D&quot;, &quot;Hubert&#39;s C&quot;, &quot;Average Silhouette Width (weighted)&quot;), abreviacion = c(&#39;PBC&#39;, &#39;HGSD&#39;, &#39;HC&#39;, &#39;ASWw&#39;), interpretacion = c(&#39;Mide la capacidad de la clusterización de reproducir las distancias&#39;, &#39;Mide la capacidad de la clusterización de reproducir las distancias tomando en cuenta empates en distancias&#39;, &#39;Mide la brecha entre la clusterización obtenida y la mejor partición teóricamente posible con este número de grupos y distancias&#39;, &#39;Mide la coherencia de asignaciones. Alta coherencia indica una alta distancia entre grupos y fuerte homogeneidad inter-grupal&#39;))) indicador abreviacion interpretacion Point Biserial Correlation PBC Mide la capacidad de la clusterización de reproducir las distancias Hubert’s Somers’ D HGSD Mide la capacidad de la clusterización de reproducir las distancias tomando en cuenta empates en distancias Hubert’s C HC Mide la brecha entre la clusterización obtenida y la mejor partición teóricamente posible con este número de grupos y distancias Average Silhouette Width (weighted) ASWw Mide la coherencia de asignaciones. Alta coherencia indica una alta distancia entre grupos y fuerte homogeneidad inter-grupal # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range.depr4 &lt;- WeightedCluster::as.clustrange(ward.depr4, diss = dist.depr4, ncluster = 10) # Visualizar clusters: ward.range.depr4$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) Para ASWw, HG y PBC, mientras más alto el valor indica una mejor calidad en la partición. Para HC mientras más bajo es mejor. Los mejores valores parecen estar entre 4 y 5 clusters. 1.1.4 Graficos de secuencias por clusters Pruebas con 4-5 clusters TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 4), border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 4), border = NA, space = 0) TraMineR::seqfplot(seq.depr4, group = stats::cutree(ward.depr4, k = 5), border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr4, group = stats::cutree(ward.depr4, k = 5), border = NA, space = 0) 1.1.5 Opción preferida: 5 clusters Me gusta la opción con 5 clusters. Nombres provisorios: - Trayectoria alta/moderada - Trayectoria descendente - Trayectoria ascendente - Trayectoria media/moderada - Trayectoria baja/media seq.depr4$cluster &lt;- factor(stats::cutree(ward.depr4, k = 5), levels = 1:5, labels = c(&#39;Trayectoria alta/moderada&#39;, &#39;Trayectoria descendente&#39;, &#39;Trayectoria ascendente&#39;, &#39;Trayectoria media/moderada&#39;, &#39;Trayectoria baja/media&#39;)) TraMineR::seqfplot(seq.depr4, group = seq.depr4$cluster, border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr4, group = seq.depr4$cluster, border = NA, space = 0, xtlab = c(2016:2019, 2021)) 1.2 Secuencia de depresión con 2 categorías # Crear objeto con secuencias seq.depr2 &lt;- TraMineR::seqdef(elsoc_salud, var = c(&#39;depr2_w01&#39;, &#39;depr2_w02&#39;, &#39;depr2_w03&#39;, &#39;depr2_w04&#39;, &#39;depr2_w05&#39;), states = c(&#39;Sin síntomas/sintomas medios&#39;, &#39;sintomas moderados/severos&#39;), labels = c(&#39;Sin/medios&#39;, &#39;Moderados/Severos&#39;), weights = elsoc_salud$ponderador02_w01, cpal = c(&#39;lightgreen&#39;, &#39;slateblue4&#39;)) 1.2.1 Gráfico de secuencias: Hay 32 secuencias en total TraMineR::seqIplot(seq.depr2, border = NA, xtlab = c(2016:2019, 2021), space = 0, sortv = elsoc_salud$phq_sum) 1.2.2 Clusters de secuencias: dist.depr2 &lt;- TraMineR::seqdist(seq.depr2, method = &quot;OM&quot;, sm = &#39;CONSTANT&#39;) # Construir tipos de trayectorias con analisis de cluster jerarquico Ward ward.depr2 &lt;- cluster::agnes(dist.depr2, diss = TRUE, method = &#39;ward&#39;) # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range.depr2 &lt;- WeightedCluster::as.clustrange(ward.depr2, diss = dist.depr2, ncluster = 10) # Visualizar clusters: ward.range.depr2$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASW, ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) En este caso al parecer mientrás más clusters es mejor. 1.2.3 Gráficos de secuencia por clusters Pruebas con 4-7 clusters TraMineR::seqfplot(seq.depr2, group = stats::cutree(ward.depr2, k = 4), border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr2, group = stats::cutree(ward.depr2, k = 4), border = NA, space = 0) TraMineR::seqfplot(seq.depr2, group = stats::cutree(ward.depr2, k = 5), border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr2, group = stats::cutree(ward.depr2, k = 5), border = NA, space = 0) TraMineR::seqfplot(seq.depr2, group = stats::cutree(ward.depr2, k = 6), border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr2, group = stats::cutree(ward.depr2, k = 6), border = NA, space = 0) TraMineR::seqfplot(seq.depr2, group = stats::cutree(ward.depr2, k = 7), border = NA, space = 0, idxs = 0, xtlab = c(2016:2019, 2021)) TraMineR::seqdplot(seq.depr2, group = stats::cutree(ward.depr2, k = 7), border = NA, space = 0) "],["trayectorias-de-sintomatologia-depresiva.-modelo-latent-class-mixed-model-lcmm.html", "Capítulo 2 Trayectorias de sintomatologia depresiva. Modelo Latent Class Mixed Model (LCMM) 2.1 Identificar trayectorias: 2.2 Principales trayectorias", " Capítulo 2 Trayectorias de sintomatologia depresiva. Modelo Latent Class Mixed Model (LCMM) set.seed(123) 2.1 Identificar trayectorias: Modelos de trayectorias lineales: Se usa el modelo de 1 clase para fijar los valores iniciales a iterar: lcmm1_lin &lt;- hlme(phq9 ~ ola, subject = &quot;idencuesta&quot;, ng = 1, data = elsoc_salud_long) lcmm2_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 2, data = elsoc_salud_long)) lcmm3_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 3, data = elsoc_salud_long)) lcmm4_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 4, data = elsoc_salud_long)) lcmm5_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 5, data = elsoc_salud_long)) lcmm6_lin &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_lin, hlme(phq9 ~ ola, mixture = ~ ola, subject = &quot;idencuesta&quot;, ng = 6, data = elsoc_salud_long)) Modelos de trayectorias cuadráticas: lcmm1_quad &lt;- hlme(phq9 ~ poly(ola, degree = 2, raw = TRUE), subject = &quot;idencuesta&quot;, ng = 1, data = elsoc_salud_long) lcmm2_quad &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_quad, hlme(phq9 ~ ola + I(ola^2), mixture = ~ ola + I(ola^2), subject = &quot;idencuesta&quot;, ng = 2, data = elsoc_salud_long)) lcmm3_quad &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_quad, hlme(phq9 ~ ola + I(ola^2), mixture = ~ ola + I(ola^2), subject = &quot;idencuesta&quot;, ng = 3, data = elsoc_salud_long)) lcmm4_quad &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_quad, hlme(phq9 ~ ola + I(ola^2), mixture = ~ ola + I(ola^2), subject = &quot;idencuesta&quot;, ng = 4, data = elsoc_salud_long)) lcmm5_quad &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_quad, hlme(phq9 ~ ola + I(ola^2), mixture = ~ ola + I(ola^2), subject = &quot;idencuesta&quot;, ng = 5, data = elsoc_salud_long)) lcmm6_quad &lt;- gridsearch(rep = 10, maxiter = 10, minit = lcmm1_quad, hlme(phq9 ~ ola + I(ola^2), mixture = ~ ola + I(ola^2), subject = &quot;idencuesta&quot;, ng = 6, data = elsoc_salud_long)) Comparación resultados # Comparar resultados: resultados_comparados &lt;- summarytable(lcmm1_lin, lcmm1_quad, lcmm2_lin, lcmm2_quad, lcmm3_lin, lcmm3_lin, lcmm4_lin, lcmm4_quad, lcmm5_lin, lcmm5_quad, lcmm6_lin, lcmm6_quad) kableExtra::kbl(resultados_comparados[,1:4], digits = 1) G loglik npm BIC lcmm1_lin 1 -23116.6 3 46255.2 lcmm1_quad 1 -23106.8 4 46242.9 lcmm2_lin 2 -22296.7 6 44637.3 lcmm2_quad 2 -22280.3 8 44619.1 lcmm3_lin 3 -22169.6 9 44405.2 lcmm3_lin 3 -22169.6 9 44405.2 lcmm4_lin 4 -22096.3 12 44280.4 lcmm4_quad 4 -22074.0 16 44265.1 lcmm5_lin 5 -22065.5 15 44240.9 lcmm5_quad 5 -22042.1 20 44230.7 lcmm6_lin 6 -22065.5 18 44262.9 lcmm6_quad 6 -21999.6 24 44174.9 kableExtra::kbl(resultados_comparados[,5:9], digits = 1) %class1 %class2 %class3 %class4 %class5 lcmm1_lin 100.0 NA NA NA NA lcmm1_quad 100.0 NA NA NA NA lcmm2_lin 20.8 79.2 NA NA NA lcmm2_quad 20.9 79.1 NA NA NA lcmm3_lin 26.3 67.0 6.7 NA NA lcmm3_lin 26.3 67.0 6.7 NA NA lcmm4_lin 3.3 5.4 27.4 63.9 NA lcmm4_quad 63.2 27.9 5.2 3.7 NA lcmm5_lin 58.9 5.8 1.5 28.4 5.4 lcmm5_quad 27.4 6.0 59.6 1.7 5.4 lcmm6_lin 5.4 0.0 31.5 5.8 55.8 lcmm6_quad 5.1 5.4 26.6 1.7 58.2 2.2 Principales trayectorias Según criterios de información debería estar entre 4y 5 clases: summary(lcmm4_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 4, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1513 ## Number of observations: 7451 ## Number of latent classes: 4 ## Number of parameters: 12 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 9 ## Convergence criteria: parameters= 2.8e-05 ## : likelihood= 1.8e-05 ## : second derivatives= 1.1e-11 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22096.25 ## AIC: 44216.51 ## BIC: 44280.37 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 -2.85226 0.21766 -13.104 0.00000 ## intercept class2 -2.41393 0.16903 -14.281 0.00000 ## intercept class3 -0.79941 0.10137 -7.886 0.00000 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 21.41747 1.03744 20.645 0.00000 ## intercept class2 8.69658 0.85057 10.224 0.00000 ## intercept class3 8.50963 0.38331 22.200 0.00000 ## intercept class4 3.43463 0.16907 20.315 0.00000 ## ola class1 -2.20170 0.31364 -7.020 0.00000 ## ola class2 1.90835 0.23287 8.195 0.00000 ## ola class3 0.05517 0.09942 0.555 0.57892 ## ola class4 0.16555 0.04702 3.521 0.00043 ## ## coef Se ## Residual standard error: 4.10416 0.03655 pred_lcmm4_lin &lt;- predictY(lcmm4_lin, data.frame(ola = 1:5)) plot(pred_lcmm4_lin, ylim = c(0, 27)) summary(lcmm4_quad) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola + I(ola^2), mixture = ~ola + I(ola^2), ## subject = &quot;idencuesta&quot;, ng = 4, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1513 ## Number of observations: 7451 ## Number of latent classes: 4 ## Number of parameters: 16 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 12 ## Convergence criteria: parameters= 3.5e-06 ## : likelihood= 4.3e-07 ## : second derivatives= 5.7e-13 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22073.96 ## AIC: 44179.92 ## BIC: 44265.07 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 2.79111 0.21113 13.220 0.00000 ## intercept class2 2.00634 0.20744 9.672 0.00000 ## intercept class3 0.38807 0.27068 1.434 0.15166 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 2.72252 0.32155 8.467 0.00000 ## intercept class2 6.71471 0.59952 11.200 0.00000 ## intercept class3 7.39444 1.32548 5.579 0.00000 ## intercept class4 16.53512 1.83362 9.018 0.00000 ## ola class1 0.76515 0.24073 3.178 0.00148 ## ola class2 1.52408 0.43486 3.505 0.00046 ## ola class3 2.97859 1.02192 2.915 0.00356 ## ola class4 1.79550 1.30092 1.380 0.16753 ## I(ola^2) class1 -0.10045 0.03911 -2.569 0.01021 ## I(ola^2) class2 -0.24243 0.07148 -3.391 0.00070 ## I(ola^2) class3 -0.17680 0.17031 -1.038 0.29921 ## I(ola^2) class4 -0.65557 0.20870 -3.141 0.00168 ## ## coef Se ## Residual standard error: 4.08664 0.03647 pred_lcmm4_quad &lt;- predictY(lcmm4_quad, data.frame(ola = 1:5)) plot(pred_lcmm4_quad, ylim = c(0, 27)) summary(lcmm5_lin) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola, mixture = ~ola, subject = &quot;idencuesta&quot;, ## ng = 5, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1513 ## Number of observations: 7451 ## Number of latent classes: 5 ## Number of parameters: 15 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 27 ## Convergence criteria: parameters= 6.2e-08 ## : likelihood= 1.7e-05 ## : second derivatives= 1.2e-06 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22065.54 ## AIC: 44161.07 ## BIC: 44240.9 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 2.28422 0.14216 16.068 0.00000 ## intercept class2 -0.00482 0.05286 -0.091 0.92736 ## intercept class3 -1.30931 0.30349 -4.314 0.00002 ## intercept class4 1.56077 0.14705 10.614 0.00000 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 3.35124 0.17966 18.653 0.00000 ## intercept class2 7.56736 0.76760 9.858 0.00000 ## intercept class3 21.63069 1.48875 14.529 0.00000 ## intercept class4 7.22559 0.39772 18.168 0.00000 ## intercept class5 17.11599 0.79157 21.623 0.00000 ## ola class1 0.13976 0.04901 2.852 0.00435 ## ola class2 2.02327 0.20284 9.975 0.00000 ## ola class3 -1.14989 0.44389 -2.590 0.00958 ## ola class4 0.23980 0.10214 2.348 0.01888 ## ola class5 -1.73989 0.21596 -8.056 0.00000 ## ## coef Se ## Residual standard error: 4.03786 0.03663 pred_lcmm5_lin &lt;- predictY(lcmm5_lin, data.frame(ola = 1:5)) plot(pred_lcmm5_lin, ylim = c(0, 27)) summary(lcmm5_quad) ## Heterogenous linear mixed model ## fitted by maximum likelihood method ## ## hlme(fixed = phq9 ~ ola + I(ola^2), mixture = ~ola + I(ola^2), ## subject = &quot;idencuesta&quot;, ng = 5, data = elsoc_salud_long) ## ## Statistical Model: ## Dataset: elsoc_salud_long ## Number of subjects: 1513 ## Number of observations: 7451 ## Number of latent classes: 5 ## Number of parameters: 20 ## ## Iteration process: ## Convergence criteria satisfied ## Number of iterations: 16 ## Convergence criteria: parameters= 4e-05 ## : likelihood= 7.4e-05 ## : second derivatives= 2.2e-05 ## ## Goodness-of-fit statistics: ## maximum log-likelihood: -22042.15 ## AIC: 44124.29 ## BIC: 44230.73 ## ## ## Maximum Likelihood Estimates: ## ## Fixed effects in the class-membership model: ## (the class of reference is the last class) ## ## coef Se Wald p-value ## intercept class1 1.50241 0.27757 5.413 0.00000 ## intercept class2 -0.00935 0.32383 -0.029 0.97696 ## intercept class3 2.26102 0.28374 7.969 0.00000 ## intercept class4 -1.35096 0.47966 -2.816 0.00486 ## ## Fixed effects in the longitudinal model: ## ## coef Se Wald p-value ## intercept class1 4.56716 0.98064 4.657 0.00000 ## intercept class2 6.39774 1.39832 4.575 0.00000 ## intercept class3 2.85867 0.33978 8.413 0.00000 ## intercept class4 15.79998 2.85279 5.538 0.00000 ## intercept class5 17.49394 4.02094 4.351 0.00001 ## ola class1 2.43868 0.83855 2.908 0.00363 ## ola class2 3.39610 1.07202 3.168 0.00154 ## ola class3 0.59090 0.25220 2.343 0.01913 ## ola class4 4.15404 2.03568 2.041 0.04129 ## ola class5 -2.39232 3.48704 -0.686 0.49268 ## I(ola^2) class1 -0.35450 0.13635 -2.600 0.00932 ## I(ola^2) class2 -0.24487 0.17831 -1.373 0.16968 ## I(ola^2) class3 -0.07681 0.04117 -1.866 0.06207 ## I(ola^2) class4 -0.95009 0.34733 -2.735 0.00623 ## I(ola^2) class5 0.10784 0.56052 0.192 0.84744 ## ## coef Se ## Residual standard error: 4.02137 0.03675 pred_lcmm5_quad &lt;- predictY(lcmm5_quad, data.frame(ola = 1:5)) plot(pred_lcmm5_quad, ylim = c(0, 27)) "],["variables-modelo.html", "Capítulo 3 Variables modelo Agregar variables de trayectoria de los distintos modelos Agregar variables independientes 3.1 Crear y agregar trayectorias de variables independientes 3.2 Guardar datos para usar después", " Capítulo 3 Variables modelo Agregar variables de trayectoria de los distintos modelos elsoc_salud_modelo &lt;- elsoc_salud elsoc_salud_modelo$trayectoria_om4.4 &lt;- factor(stats::cutree(ward.depr4, k = 5), levels = c(4, 2, 3, 1), labels = c(&#39;Trayectoria baja-media&#39;, &#39;Trayectoria media-moderada&#39;, &#39;Trayectoria ascendente&#39;, &#39;Trayectoria alta-moderada&#39;)) elsoc_salud_modelo$trayectoria_om4.5 &lt;- factor(stats::cutree(ward.depr4, k = 5), levels = c(5, 4, 2, 3, 1), labels = c(&#39;Trayectoria baja-media&#39;, &#39;Trayectoria media-moderada&#39;, &#39;Trayectoria descendente&#39;, &#39;Trayectoria ascendente&#39;, &#39;Trayectoria alta-moderada&#39;)) elsoc_salud_modelo$trayectoria_gmm.4lin &lt;- factor(elsoc_salud %&gt;% left_join(lcmm4_lin$pprob %&gt;% select(idencuesta, class), by = &#39;idencuesta&#39;) %&gt;% pull(class), levels = c(4, 3, 1, 2), labels = c(&#39;Trayectoria baja&#39;, &#39;Trayectoria media&#39;, &#39;Trayectoria descendente&#39;, &#39;Trayectoria ascendente&#39;)) elsoc_salud_modelo$trayectoria_gmm.5lin &lt;- factor(elsoc_salud %&gt;% left_join(lcmm5_lin$pprob %&gt;% select(idencuesta, class), by = &#39;idencuesta&#39;) %&gt;% pull(class), levels = c(1, 4, 5, 2, 3), labels = c(&#39;Trayectoria baja&#39;, &#39;Trayectoria media&#39;, &#39;Trayectoria media-descendente&#39;, &#39;Trayectoria media-ascendente&#39;, &#39;Trayectoria alta-descendente&#39;)) Agregar variables independientes elsoc_salud_modelo &lt;- elsoc_salud_modelo %&gt;% filter(!elsoc::is_nsnr(m30_w01, m30_w02, m30_w03, m30_w04, m30b_w05)) %&gt;% mutate( # Variables de ingreso: m30_w01 = 1000*as.numeric(car::recode(m30_w01, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w01_imp = ifelse(is_nsnr(m29_w01), m30_w01, m29_w01), ypc_w01 = m29_w01_imp / nhogar1_w01, m30_w02 = 1000*as.numeric(car::recode(m30_w02, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w02_imp = ifelse(is_nsnr(m29_w02), m30_w02, m29_w02), ypc_w02 = m29_w02_imp / nhogar1_w01, m30_w03 = 1000*as.numeric(car::recode(m30_w03, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w03_imp = ifelse(is_nsnr(m29_w03), m30_w03, m29_w03), ypc_w03 = m29_w03_imp / ifelse(is_nsnr(m54_w03), NA, m54_w03), m30_w04 = 1000*as.numeric(car::recode(m30_w04, &quot;1 = 220; 2 = 250; 3 = 305; 4 = 355; 5 = 400; 6 = 445; 7 = 490; 8 = 535; 9 = 585; 10 = 640; 11 = 700; 12 = 765; 13 = 845; 14 = 935; 15 = 1040; 16 = 1180; 17 = 1375; 18 = 1670; 19 = 2275; 20 = 2700; NA = NA&quot;)), m29_w04_imp = ifelse(is_nsnr(m29_w04), m30_w04, m29_w04), ypc_w04 = m29_w04_imp / ifelse(is_nsnr(m54_w04), NA, m54_w04), m30b_w05 = 1000*as.numeric(car::recode(m30b_w05, &quot;1 = 225; 2 = 575; 3 = 850; 4 = 1250; 5 = 1750; NA = NA&quot;)), m29_w05_imp = ifelse(is_nsnr(m29_w05), m30b_w05, m29_w05), ypc_w05 = m29_w05_imp / ifelse(is_nsnr(m54_w05), NA, m54_w05), log_ing = log((ypc_w01 + ypc_w02 + ypc_w03 + ypc_w04 + ypc_w05)/5), quintil_w01 = statar::xtile(ypc_w01, n = 5, wt = ponderador02_w01), quintil_w01 = factor(quintil_w01, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w02 = statar::xtile(ypc_w02, n = 5, wt = ponderador02_w02), quintil_w02 = factor(quintil_w02, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w03 = statar::xtile(ypc_w03, n = 5, wt = ponderador02_w03), quintil_w03 = factor(quintil_w03, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w04 = statar::xtile(ypc_w04, n = 5, wt = ponderador02_w04), quintil_w04 = factor(quintil_w04, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), quintil_w05 = statar::xtile(ypc_w05, n = 5, wt = ponderador02_w05), quintil_w05 = factor(quintil_w05, levels = 1:5, labels = glue::glue(&#39;Quintil {1:5}&#39;)), # Situación ocupacional: ocup_w01 = factor(car::recode(m02_w01, &quot;1:3 = 1; 6 = 2; c(4, 5, 7, 8, 9) = 3&quot;), levels = 1:3, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;)), ocup_w02 = factor(car::recode(m02_w02, &quot;1:3 = 1; 6 = 2; c(4, 5, 7, 8, 9) = 3&quot;), levels = 1:3, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;)), ocup_w03 = factor(car::recode(m02_w03, &quot;1:3 = 1; 6 = 2; c(4, 5, 7, 8, 9) = 3&quot;), levels = 1:3, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;)), ocup_w04 = factor(car::recode(m02_w04, &quot;1:3 = 1; 6 = 2; c(4, 5, 7, 8, 9) = 3&quot;), levels = 1:3, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;)), ocup_w05 = factor(car::recode(m02_w05, &quot;1:3 = 1; 6 = 2; c(4, 5, 7, 8, 9) = 3&quot;), levels = 1:3, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;)), ocup2_w01 = factor(car::recode(m02_w01, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup2_w02 = factor(car::recode(m02_w02, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup2_w03 = factor(car::recode(m02_w03, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup2_w04 = factor(car::recode(m02_w04, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), ocup2_w05 = factor(car::recode(m02_w05, &quot;1:3 = 1; 6 = 2; c(4, 5, 8, 9) = 3; 7 = 4&quot;), levels = 1:4, labels = c(&#39;Ocupado&#39;, &#39;Desempleado&#39;, &#39;Inactivo&#39;, &#39;Trabajo no remunerado&#39;)), # Insatisfacción con el ingreso insatisf_ing_w01 = factor(m16_w01 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w02 = factor(m16_w02 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w03 = factor(m16_w03 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w04 = factor(m16_w04 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), insatisf_ing_w05 = factor(m16_w05 %in% 1:2, labels = c(&#39;Satisfecho&#39;, &#39;Insatisfecho&#39;)), # Sobrecarga de deudas sobrecarga_deuda_w01 = factor(m43_w01 %in% 4:5, labels = c(&#39;No sobrecargado por deudas&#39;, &#39;Sobrecargado por deudas&#39;)), sobrecarga_deuda_w03 = factor(m43_w03 %in% 4:5, labels = c(&#39;No sobrecargado por deudas&#39;, &#39;Sobrecargado por deudas&#39;)), sobrecarga_deuda_w05 = factor(m43_w05 %in% 4:5, labels = c(&#39;No sobrecargado por deudas&#39;, &#39;Sobrecargado por deudas&#39;)), # Apoyo social apoyo_social_w01 = factor(s12_w01 %in% 4:5, labels = c(&#39;Sin apoyo social&#39;, &#39;Con apoyo social&#39;)), apoyo_social_w03 = factor(s12_w03 %in% 4:5, labels = c(&#39;Sin apoyo social&#39;, &#39;Con apoyo social&#39;)), apoyo_social_w05 = factor(s12_w05 %in% 4:5, labels = c(&#39;Sin apoyo social&#39;, &#39;Con apoyo social&#39;)), # Actividad física regular activ_fisica_w01 = factor(s04_w01 %in% 1:3, labels = c(&#39;Sin actividad física regular&#39;, &#39;Con actividad física regular&#39;)), activ_fisica_w03 = factor(s04_w03 %in% 1:3, labels = c(&#39;Sin actividad física regular&#39;, &#39;Con actividad física regular&#39;)), activ_fisica_w05 = factor(s04_w05 %in% 1:3, labels = c(&#39;Sin actividad física regular&#39;, &#39;Con actividad física regular&#39;)), # Fumador fuma_w01 = factor(s08_w01 &gt;= 1, labels = c(&#39;No fuma&#39;, &#39;Fumador&#39;)), fuma_w03 = factor(s08_w03 &gt;= 1, labels = c(&#39;No fuma&#39;, &#39;Fumador&#39;)), fuma_w05 = factor(s08_w05 &gt;= 1, labels = c(&#39;No fuma&#39;, &#39;Fumador&#39;)), # IMC imc_w01 = ifelse(is_nsnr(s06_w01), NA, s06_w01) / (ifelse(is_nsnr(s05_w01), NA, s05_w01/100))^2, imc_w03 = ifelse(is_nsnr(s06_w03), NA, s06_w03) / (ifelse(is_nsnr(s05_w03), NA, s05_w03/100))^2, imc_w05 = ifelse(is_nsnr(s06_w05), NA, s06_w05) / (ifelse(is_nsnr(s05_w03), NA, s05_w03/100))^2, # Personalidad s22_01_w02 = ifelse(is_nsnr(s22_01_w02), NA, s22_01_w02), s22_02_w02 = ifelse(is_nsnr(s22_02_w02), NA, s22_02_w02), s22_03_w02 = ifelse(is_nsnr(s22_03_w02), NA, s22_03_w02), s22_04_w02 = ifelse(is_nsnr(s22_04_w02), NA, s22_04_w02), s22_05_w02 = ifelse(is_nsnr(s22_05_w02), NA, s22_05_w02), s22_06_w02 = ifelse(is_nsnr(s22_06_w02), NA, s22_06_w02), s22_07_w02 = ifelse(is_nsnr(s22_07_w02), NA, s22_07_w02), s22_08_w02 = ifelse(is_nsnr(s22_08_w02), NA, s22_08_w02), s22_09_w02 = ifelse(is_nsnr(s22_09_w02), NA, s22_09_w02), s22_10_w02 = ifelse(is_nsnr(s22_10_w02), NA, s22_10_w02), extraversion = 6 - (s22_01_w02) + s22_06_w02 , agreeableness = s22_02_w02 + 6 - s22_07_w02, conscientiousness = 6 - s22_03_w02 + s22_08_w02 , neuroticism = 6 - s22_04_w02 + s22_09_w02, openness = 6 - s22_05_w02 + s22_10_w02, # Direccion vida proyecto_vida = factor(s30_01_w03 %in% 4:5, labels = c(&#39;No decidido dirección de vida&#39;, &#39;Decidido dirección de vida&#39;)) ) 3.1 Crear y agregar trayectorias de variables independientes comparar_clusters &lt;- function(.data, vars, K = 10) { seq &lt;- TraMineR::seqdef(.data, var = vars, weights = .data$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) # Comparar soluciones con diferentes numeros de trayectorias (se prueban de 2 a 10 clusters) ward.range &lt;- WeightedCluster::as.clustrange(ward, diss = dist, ncluster = K) # Visualizar clusters: ward.range$stats %&gt;% mutate(clusters = 2:10) %&gt;% pivot_longer(cols = c(ASWw, HG, PBC, HC), names_to = &#39;indicador&#39;, values_to = &#39;value&#39;) %&gt;% group_by(indicador) %&gt;% mutate(value = (value - mean(value, na.rm = TRUE)) / sd(value, na.rm = TRUE)) %&gt;% ggplot(aes(y = value, x = clusters, color = indicador, group = indicador)) + geom_line() + scale_x_continuous(breaks = 2:10) } trayectoria &lt;- function(.data, vars, K, olas = c(2016:2019, 2021), ...) { seq &lt;- TraMineR::seqdef(.data, var = vars, ..., weights = .data$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) TraMineR::seqIplot(seq, group = stats::cutree(ward, k = K), border = NA, space = 0, idxs = 0, xtlab = olas) TraMineR::seqdplot(seq, group = stats::cutree(ward, k = K), border = NA, space = 0) } Insatisfacción con el ingreso comparar_clusters(elsoc_salud_modelo, vars = c(&#39;insatisf_ing_w01&#39;, &#39;insatisf_ing_w02&#39;, &#39;insatisf_ing_w03&#39;, &#39;insatisf_ing_w04&#39;, &#39;insatisf_ing_w05&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;insatisf_ing_w01&#39;, &#39;insatisf_ing_w02&#39;, &#39;insatisf_ing_w03&#39;, &#39;insatisf_ing_w04&#39;, &#39;insatisf_ing_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;insatisf_ing_w01&#39;, &#39;insatisf_ing_w02&#39;, &#39;insatisf_ing_w03&#39;, &#39;insatisf_ing_w04&#39;, &#39;insatisf_ing_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;palegreen3&#39;), K = 4) # Agregar trayectoria de 4 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;insatisf_ing_w01&#39;, &#39;insatisf_ing_w02&#39;, &#39;insatisf_ing_w03&#39;, &#39;insatisf_ing_w04&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_insatisf_ing &lt;- factor(stats::cutree(ward, k = 4)) Situación ocupacional (3 categorías) comparar_clusters(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;, &#39;ocup_w05&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;, &#39;ocup_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;), K = 2) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;, &#39;ocup_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;, &#39;ocup_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;), K = 6) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;ocup_w01&#39;, &#39;ocup_w02&#39;, &#39;ocup_w03&#39;, &#39;ocup_w04&#39;, &#39;ocup_w05&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_ocup &lt;- factor(stats::cutree(ward, k = 3)) Situación ocupacional (4 categorías) comparar_clusters(elsoc_salud_modelo, vars = c(&#39;ocup2_w01&#39;, &#39;ocup2_w02&#39;, &#39;ocup2_w03&#39;, &#39;ocup2_w04&#39;, &#39;ocup2_w05&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup2_w01&#39;, &#39;ocup2_w02&#39;, &#39;ocup2_w03&#39;, &#39;ocup2_w04&#39;, &#39;ocup2_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup2_w01&#39;, &#39;ocup2_w02&#39;, &#39;ocup2_w03&#39;, &#39;ocup2_w04&#39;, &#39;ocup2_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup2_w01&#39;, &#39;ocup2_w02&#39;, &#39;ocup2_w03&#39;, &#39;ocup2_w04&#39;, &#39;ocup2_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 5) trayectoria(elsoc_salud_modelo, vars = c(&#39;ocup2_w01&#39;, &#39;ocup2_w02&#39;, &#39;ocup2_w03&#39;, &#39;ocup2_w04&#39;, &#39;ocup2_w05&#39;), cpal = c(&#39;palevioletred3&#39;, &#39;khaki3&#39;, &#39;steelblue3&#39;, &#39;palegreen3&#39;), K = 6) # Agregar trayectoria de 5 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;ocup2_w01&#39;, &#39;ocup2_w02&#39;, &#39;ocup2_w03&#39;, &#39;ocup2_w04&#39;, &#39;ocup2_w05&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_ocup2 &lt;- factor(stats::cutree(ward, k = 5)) Sobrecarga por deudas comparar_clusters(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;, &#39;sobrecarga_deuda_w05&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;, &#39;sobrecarga_deuda_w05&#39;), olas = c(2016, 2018, 2021), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 3) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;, &#39;sobrecarga_deuda_w05&#39;), olas = c(2016, 2018, 2021), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;, &#39;sobrecarga_deuda_w05&#39;), olas = c(2016, 2018, 2021), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;sobrecarga_deuda_w01&#39;, &#39;sobrecarga_deuda_w03&#39;, &#39;sobrecarga_deuda_w05&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_deuda &lt;- factor(stats::cutree(ward, k = 3)) Avtividad física regular comparar_clusters(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;, &#39;activ_fisica_w05&#39;)) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;, &#39;activ_fisica_w05&#39;), olas = c(2016, 2018, 2021), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 2) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;, &#39;activ_fisica_w05&#39;), olas = c(2016, 2018, 2021), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 4) trayectoria(elsoc_salud_modelo, vars = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;, &#39;activ_fisica_w05&#39;), olas = c(2016, 2018, 2021), cpal = c(&#39;palegreen3&#39;, &#39;palevioletred3&#39;), K = 5) # Agregar trayectoria de 3 clusters seq &lt;- TraMineR::seqdef(elsoc_salud_modelo, var = c(&#39;activ_fisica_w01&#39;, &#39;activ_fisica_w03&#39;, &#39;activ_fisica_w05&#39;), weights = elsoc_salud_modelo$ponderador02_w01) dist &lt;- TraMineR::seqdist(seq, method = &quot;LCS&quot;, with.missing = TRUE) ward &lt;- cluster::agnes(dist, diss = TRUE, method = &#39;ward&#39;) elsoc_salud_modelo$trayectoria_activ_fisica &lt;- factor(stats::cutree(ward, k = 4)) 3.2 Guardar datos para usar después save(elsoc_salud_modelo, file = &#39;datos_salud_modelo.RData&#39;) sjlabelled::write_stata(x = elsoc_salud_modelo %&gt;% rename(trayectoria_om4_4 = trayectoria_om4.4, trayectoria_om4_5 = trayectoria_om4.5, trayectoria_gmm_4lin = trayectoria_gmm.4lin, trayectoria_gmm_5lin = trayectoria_gmm.5lin ), path = &#39;datos_salud_modelo.dta&#39;) "],["modelo-multinomial-logit.html", "Capítulo 4 Modelo multinomial logit 4.1 Comparación trayectorias 4.2 Variable dependiente: Trayectorias OM 4 clases 4.3 Variable dependiente: Trayectorias OM 5 clases 4.4 Variable dependiente: Trayectorias LCMM 4 clases 4.5 Variable dependiente: Trayectorias LCMM 5 clases", " Capítulo 4 Modelo multinomial logit load(&#39;datos_salud_modelo.RData&#39;) 4.1 Comparación trayectorias with(elsoc_salud_modelo, table(trayectoria_om4.4, trayectoria_gmm.4lin)) ## trayectoria_gmm.4lin ## trayectoria_om4.4 Trayectoria baja Trayectoria media ## Trayectoria baja-media 56 138 ## Trayectoria media-moderada 10 60 ## Trayectoria ascendente 29 93 ## Trayectoria alta-moderada 0 17 ## trayectoria_gmm.4lin ## trayectoria_om4.4 Trayectoria descendente Trayectoria ascendente ## Trayectoria baja-media 0 0 ## Trayectoria media-moderada 12 2 ## Trayectoria ascendente 0 33 ## Trayectoria alta-moderada 28 33 with(elsoc_salud_modelo, table(trayectoria_om4.4, trayectoria_gmm.5lin)) ## trayectoria_gmm.5lin ## trayectoria_om4.4 Trayectoria baja Trayectoria media ## Trayectoria baja-media 27 164 ## Trayectoria media-moderada 8 43 ## Trayectoria ascendente 19 89 ## Trayectoria alta-moderada 0 6 ## trayectoria_gmm.5lin ## trayectoria_om4.4 Trayectoria media-descendente ## Trayectoria baja-media 3 ## Trayectoria media-moderada 30 ## Trayectoria ascendente 7 ## Trayectoria alta-moderada 25 ## trayectoria_gmm.5lin ## trayectoria_om4.4 Trayectoria media-ascendente ## Trayectoria baja-media 0 ## Trayectoria media-moderada 3 ## Trayectoria ascendente 40 ## Trayectoria alta-moderada 30 ## trayectoria_gmm.5lin ## trayectoria_om4.4 Trayectoria alta-descendente ## Trayectoria baja-media 0 ## Trayectoria media-moderada 0 ## Trayectoria ascendente 0 ## Trayectoria alta-moderada 17 with(elsoc_salud_modelo, table(trayectoria_om4.5, trayectoria_gmm.4lin)) ## trayectoria_gmm.4lin ## trayectoria_om4.5 Trayectoria baja Trayectoria media ## Trayectoria baja-media 699 19 ## Trayectoria media-moderada 56 138 ## Trayectoria descendente 10 60 ## Trayectoria ascendente 29 93 ## Trayectoria alta-moderada 0 17 ## trayectoria_gmm.4lin ## trayectoria_om4.5 Trayectoria descendente Trayectoria ascendente ## Trayectoria baja-media 0 0 ## Trayectoria media-moderada 0 0 ## Trayectoria descendente 12 2 ## Trayectoria ascendente 0 33 ## Trayectoria alta-moderada 28 33 with(elsoc_salud_modelo, table(trayectoria_om4.5, trayectoria_gmm.5lin)) ## trayectoria_gmm.5lin ## trayectoria_om4.5 Trayectoria baja Trayectoria media ## Trayectoria baja-media 678 40 ## Trayectoria media-moderada 27 164 ## Trayectoria descendente 8 43 ## Trayectoria ascendente 19 89 ## Trayectoria alta-moderada 0 6 ## trayectoria_gmm.5lin ## trayectoria_om4.5 Trayectoria media-descendente ## Trayectoria baja-media 0 ## Trayectoria media-moderada 3 ## Trayectoria descendente 30 ## Trayectoria ascendente 7 ## Trayectoria alta-moderada 25 ## trayectoria_gmm.5lin ## trayectoria_om4.5 Trayectoria media-ascendente ## Trayectoria baja-media 0 ## Trayectoria media-moderada 0 ## Trayectoria descendente 3 ## Trayectoria ascendente 40 ## Trayectoria alta-moderada 30 ## trayectoria_gmm.5lin ## trayectoria_om4.5 Trayectoria alta-descendente ## Trayectoria baja-media 0 ## Trayectoria media-moderada 0 ## Trayectoria descendente 0 ## Trayectoria ascendente 0 ## Trayectoria alta-moderada 17 with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_om4.4, trayectoria_gmm.4lin, bias.correct = TRUE)) ## Cramer V ## 0.2558 with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_om4.4, trayectoria_gmm.5lin, bias.correct = TRUE)) ## Cramer V ## 0.2524 with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_om4.5, trayectoria_gmm.4lin, bias.correct = TRUE)) ## Cramer V ## 0.6047 with(elsoc_salud_modelo, rcompanion::cramerV(trayectoria_om4.5, trayectoria_gmm.5lin, bias.correct = TRUE)) ## Cramer V ## 0.5733 4.2 Variable dependiente: Trayectorias OM 4 clases m1 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_om4.4 ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica, data = .) ## # weights: 68 (48 variable) ## initial value 707.010124 ## iter 10 value 645.754900 ## iter 20 value 637.340858 ## iter 30 value 636.338517 ## iter 40 value 636.205897 ## iter 50 value 636.194662 ## final value 636.194619 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_om4.4 ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01, data = .) ## # weights: 84 (60 variable) ## initial value 647.399467 ## iter 10 value 613.937758 ## iter 20 value 572.785949 ## iter 30 value 569.555614 ## iter 40 value 569.251668 ## iter 50 value 569.171390 ## iter 60 value 569.117829 ## iter 70 value 569.110418 ## final value 569.110348 ## converged m3 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_om4.4 ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01 + extraversion + agreeableness + conscientiousness + neuroticism + openness, data = .) ## # weights: 104 (75 variable) ## initial value 637.695406 ## iter 10 value 585.971948 ## iter 20 value 552.488070 ## iter 30 value 544.078582 ## iter 40 value 542.383487 ## iter 50 value 542.241861 ## iter 60 value 542.197993 ## iter 70 value 542.194261 ## final value 542.193548 ## converged modelsummary(list(m1, m2, m3), stars = c(&#39;*&#39; = .05, &#39;**&#39; = .01, &#39;***&#39; = .001), group = model + term ~ y.level) V1 Model 1 (Intercept) 27 27 m0_sexo_w01 27 27 m0_edad_w01 27 27 log_ing 27 27 trayectoria_deuda2 27 27 trayectoria_deuda3 27 27 trayectoria_insatisf_ing2 27 27 trayectoria_insatisf_ing3 27 27 trayectoria_insatisf_ing4 27 27 trayectoria_ocup22 27 27 trayectoria_ocup23 27 27 trayectoria_ocup24 27 27 trayectoria_ocup25 27 27 trayectoria_activ_fisica2 27 27 trayectoria_activ_fisica3 27 27 trayectoria_activ_fisica4 27 27 fuma_w01Fumador 9 9 imc_w01 9 9 proyecto_vidaDecidido dirección de vida 9 9 apoyo_social_w01Con apoyo social 9 9 extraversion 3 3 agreeableness 3 3 conscientiousness 3 3 neuroticism 3 3 openness 3 3 Model 2 (Intercept) 27 27 m0_sexo_w01 27 27 m0_edad_w01 27 27 log_ing 27 27 trayectoria_deuda2 27 27 trayectoria_deuda3 27 27 trayectoria_insatisf_ing2 27 27 trayectoria_insatisf_ing3 27 27 trayectoria_insatisf_ing4 27 27 trayectoria_ocup22 27 27 trayectoria_ocup23 27 27 trayectoria_ocup24 27 27 trayectoria_ocup25 27 27 trayectoria_activ_fisica2 27 27 trayectoria_activ_fisica3 27 27 trayectoria_activ_fisica4 27 27 fuma_w01Fumador 9 9 imc_w01 9 9 proyecto_vidaDecidido dirección de vida 9 9 apoyo_social_w01Con apoyo social 9 9 extraversion 3 3 agreeableness 3 3 conscientiousness 3 3 neuroticism 3 3 openness 3 3 Model 3 (Intercept) 27 27 m0_sexo_w01 27 27 m0_edad_w01 27 27 log_ing 27 27 trayectoria_deuda2 27 27 trayectoria_deuda3 27 27 trayectoria_insatisf_ing2 27 27 trayectoria_insatisf_ing3 27 27 trayectoria_insatisf_ing4 27 27 trayectoria_ocup22 27 27 trayectoria_ocup23 27 27 trayectoria_ocup24 27 27 trayectoria_ocup25 27 27 trayectoria_activ_fisica2 27 27 trayectoria_activ_fisica3 27 27 trayectoria_activ_fisica4 27 27 fuma_w01Fumador 9 9 imc_w01 9 9 proyecto_vidaDecidido dirección de vida 9 9 apoyo_social_w01Con apoyo social 9 9 extraversion 3 3 agreeableness 3 3 conscientiousness 3 3 neuroticism 3 3 openness 3 3 * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 4.3 Variable dependiente: Trayectorias OM 5 clases m1 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_om4.5 ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica, data = .) ## # weights: 85 (64 variable) ## initial value 1973.170881 ## iter 10 value 1705.481491 ## iter 20 value 1453.704530 ## iter 30 value 1410.352906 ## iter 40 value 1405.660474 ## iter 50 value 1405.409567 ## iter 60 value 1405.371900 ## final value 1405.371193 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_om4.5 ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01, data = .) ## # weights: 105 (80 variable) ## initial value 1841.196972 ## iter 10 value 1394.173327 ## iter 20 value 1284.724030 ## iter 30 value 1265.004455 ## iter 40 value 1262.780403 ## iter 50 value 1261.896568 ## iter 60 value 1261.632052 ## iter 70 value 1261.603286 ## iter 80 value 1261.599760 ## final value 1261.599691 ## converged m3 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_om4.5 ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01 + extraversion + agreeableness + conscientiousness + neuroticism + openness, data = .) ## # weights: 130 (100 variable) ## initial value 1818.664841 ## iter 10 value 1371.121097 ## iter 20 value 1259.206333 ## iter 30 value 1223.071275 ## iter 40 value 1201.134823 ## iter 50 value 1192.248050 ## iter 60 value 1191.014291 ## iter 70 value 1190.183574 ## iter 80 value 1189.972518 ## iter 90 value 1189.951431 ## iter 100 value 1189.947353 ## final value 1189.947353 ## stopped after 100 iterations modelsummary(list(m1, m2, m3), stars = c(&#39;*&#39; = .05, &#39;**&#39; = .01, &#39;***&#39; = .001), group = model + term ~ y.level) V1 Model 1 (Intercept) 64 64 m0_sexo_w01 64 64 m0_edad_w01 64 64 log_ing 64 64 trayectoria_deuda2 64 64 trayectoria_deuda3 64 64 trayectoria_insatisf_ing2 64 64 trayectoria_insatisf_ing3 64 64 trayectoria_insatisf_ing4 64 64 trayectoria_ocup22 64 64 trayectoria_ocup23 64 64 trayectoria_ocup24 64 64 trayectoria_ocup25 64 64 trayectoria_activ_fisica2 64 64 trayectoria_activ_fisica3 64 64 trayectoria_activ_fisica4 64 64 fuma_w01Fumador 16 16 imc_w01 16 16 proyecto_vidaDecidido dirección de vida 16 16 apoyo_social_w01Con apoyo social 16 16 extraversion 4 4 agreeableness 4 4 conscientiousness 4 4 neuroticism 4 4 openness 4 4 Model 2 (Intercept) 64 64 m0_sexo_w01 64 64 m0_edad_w01 64 64 log_ing 64 64 trayectoria_deuda2 64 64 trayectoria_deuda3 64 64 trayectoria_insatisf_ing2 64 64 trayectoria_insatisf_ing3 64 64 trayectoria_insatisf_ing4 64 64 trayectoria_ocup22 64 64 trayectoria_ocup23 64 64 trayectoria_ocup24 64 64 trayectoria_ocup25 64 64 trayectoria_activ_fisica2 64 64 trayectoria_activ_fisica3 64 64 trayectoria_activ_fisica4 64 64 fuma_w01Fumador 16 16 imc_w01 16 16 proyecto_vidaDecidido dirección de vida 16 16 apoyo_social_w01Con apoyo social 16 16 extraversion 4 4 agreeableness 4 4 conscientiousness 4 4 neuroticism 4 4 openness 4 4 Model 3 (Intercept) 64 64 m0_sexo_w01 64 64 m0_edad_w01 64 64 log_ing 64 64 trayectoria_deuda2 64 64 trayectoria_deuda3 64 64 trayectoria_insatisf_ing2 64 64 trayectoria_insatisf_ing3 64 64 trayectoria_insatisf_ing4 64 64 trayectoria_ocup22 64 64 trayectoria_ocup23 64 64 trayectoria_ocup24 64 64 trayectoria_ocup25 64 64 trayectoria_activ_fisica2 64 64 trayectoria_activ_fisica3 64 64 trayectoria_activ_fisica4 64 64 fuma_w01Fumador 16 16 imc_w01 16 16 proyecto_vidaDecidido dirección de vida 16 16 apoyo_social_w01Con apoyo social 16 16 extraversion 4 4 agreeableness 4 4 conscientiousness 4 4 neuroticism 4 4 openness 4 4 * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 4.4 Variable dependiente: Trayectorias LCMM 4 clases m1 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica, data = .) ## # weights: 68 (48 variable) ## initial value 1699.596887 ## iter 10 value 1096.972088 ## iter 20 value 1023.050361 ## iter 30 value 1016.021065 ## iter 40 value 1015.496353 ## iter 50 value 1015.449584 ## final value 1015.447967 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01, data = .) ## # weights: 84 (60 variable) ## initial value 1585.920749 ## iter 10 value 1049.843019 ## iter 20 value 937.010917 ## iter 30 value 914.728898 ## iter 40 value 911.498652 ## iter 50 value 910.621069 ## iter 60 value 909.794084 ## iter 70 value 909.311831 ## iter 80 value 909.291216 ## final value 909.274258 ## converged m3 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.4lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01 + extraversion + agreeableness + conscientiousness + neuroticism + openness, data = .) ## # weights: 104 (75 variable) ## initial value 1566.512628 ## iter 10 value 1055.074861 ## iter 20 value 942.672577 ## iter 30 value 880.912734 ## iter 40 value 856.189235 ## iter 50 value 852.994875 ## iter 60 value 851.266183 ## iter 70 value 850.507060 ## iter 80 value 849.416891 ## iter 90 value 849.150806 ## iter 100 value 849.146979 ## final value 849.146979 ## stopped after 100 iterations modelsummary(list(m1, m2, m3), stars = c(&#39;*&#39; = .05, &#39;**&#39; = .01, &#39;***&#39; = .001), group = model + term ~ y.level) V1 Model 1 (Intercept) 27 27 m0_sexo_w01 27 27 m0_edad_w01 27 27 log_ing 27 27 trayectoria_deuda2 27 27 trayectoria_deuda3 27 27 trayectoria_insatisf_ing2 27 27 trayectoria_insatisf_ing3 27 27 trayectoria_insatisf_ing4 27 27 trayectoria_ocup22 27 27 trayectoria_ocup23 27 27 trayectoria_ocup24 27 27 trayectoria_ocup25 27 27 trayectoria_activ_fisica2 27 27 trayectoria_activ_fisica3 27 27 trayectoria_activ_fisica4 27 27 fuma_w01Fumador 9 9 imc_w01 9 9 proyecto_vidaDecidido dirección de vida 9 9 apoyo_social_w01Con apoyo social 9 9 extraversion 3 3 agreeableness 3 3 conscientiousness 3 3 neuroticism 3 3 openness 3 3 Model 2 (Intercept) 27 27 m0_sexo_w01 27 27 m0_edad_w01 27 27 log_ing 27 27 trayectoria_deuda2 27 27 trayectoria_deuda3 27 27 trayectoria_insatisf_ing2 27 27 trayectoria_insatisf_ing3 27 27 trayectoria_insatisf_ing4 27 27 trayectoria_ocup22 27 27 trayectoria_ocup23 27 27 trayectoria_ocup24 27 27 trayectoria_ocup25 27 27 trayectoria_activ_fisica2 27 27 trayectoria_activ_fisica3 27 27 trayectoria_activ_fisica4 27 27 fuma_w01Fumador 9 9 imc_w01 9 9 proyecto_vidaDecidido dirección de vida 9 9 apoyo_social_w01Con apoyo social 9 9 extraversion 3 3 agreeableness 3 3 conscientiousness 3 3 neuroticism 3 3 openness 3 3 Model 3 (Intercept) 27 27 m0_sexo_w01 27 27 m0_edad_w01 27 27 log_ing 27 27 trayectoria_deuda2 27 27 trayectoria_deuda3 27 27 trayectoria_insatisf_ing2 27 27 trayectoria_insatisf_ing3 27 27 trayectoria_insatisf_ing4 27 27 trayectoria_ocup22 27 27 trayectoria_ocup23 27 27 trayectoria_ocup24 27 27 trayectoria_ocup25 27 27 trayectoria_activ_fisica2 27 27 trayectoria_activ_fisica3 27 27 trayectoria_activ_fisica4 27 27 fuma_w01Fumador 9 9 imc_w01 9 9 proyecto_vidaDecidido dirección de vida 9 9 apoyo_social_w01Con apoyo social 9 9 extraversion 3 3 agreeableness 3 3 conscientiousness 3 3 neuroticism 3 3 openness 3 3 * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 4.5 Variable dependiente: Trayectorias LCMM 5 clases m1 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.5lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica, data = .) ## # weights: 85 (64 variable) ## initial value 1973.170881 ## iter 10 value 1242.425579 ## iter 20 value 1191.852775 ## iter 30 value 1177.290466 ## iter 40 value 1174.843518 ## iter 50 value 1174.459764 ## iter 60 value 1174.290978 ## iter 70 value 1174.229295 ## iter 80 value 1174.226262 ## final value 1174.225898 ## converged m2 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.5lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01, data = .) ## # weights: 105 (80 variable) ## initial value 1841.196972 ## iter 10 value 1204.443400 ## iter 20 value 1088.541970 ## iter 30 value 1063.029153 ## iter 40 value 1057.628996 ## iter 50 value 1055.560309 ## iter 60 value 1054.827216 ## iter 70 value 1054.593056 ## iter 80 value 1054.500771 ## iter 90 value 1054.470330 ## iter 100 value 1054.459326 ## final value 1054.459326 ## stopped after 100 iterations m3 &lt;- elsoc_salud_modelo %&gt;% multinom(trayectoria_gmm.5lin ~ m0_sexo_w01 + m0_edad_w01 + log_ing + trayectoria_deuda + trayectoria_insatisf_ing + trayectoria_ocup2 + trayectoria_activ_fisica + fuma_w01 + imc_w01 + proyecto_vida + apoyo_social_w01 + extraversion + agreeableness + conscientiousness + neuroticism + openness, data = .) ## # weights: 130 (100 variable) ## initial value 1818.664841 ## iter 10 value 1152.176336 ## iter 20 value 1066.249949 ## iter 30 value 1021.584984 ## iter 40 value 999.270923 ## iter 50 value 993.509630 ## iter 60 value 989.983344 ## iter 70 value 988.403301 ## iter 80 value 987.777480 ## iter 90 value 987.494274 ## iter 100 value 987.421283 ## final value 987.421283 ## stopped after 100 iterations modelsummary(list(m1, m2, m3), stars = c(&#39;*&#39; = .05, &#39;**&#39; = .01, &#39;***&#39; = .001), group = model + term ~ y.level) V1 Model 1 (Intercept) 64 64 m0_sexo_w01 64 64 m0_edad_w01 64 64 log_ing 64 64 trayectoria_deuda2 64 64 trayectoria_deuda3 64 64 trayectoria_insatisf_ing2 64 64 trayectoria_insatisf_ing3 64 64 trayectoria_insatisf_ing4 64 64 trayectoria_ocup22 64 64 trayectoria_ocup23 64 64 trayectoria_ocup24 64 64 trayectoria_ocup25 64 64 trayectoria_activ_fisica2 64 64 trayectoria_activ_fisica3 64 64 trayectoria_activ_fisica4 64 64 fuma_w01Fumador 16 16 imc_w01 16 16 proyecto_vidaDecidido dirección de vida 16 16 apoyo_social_w01Con apoyo social 16 16 extraversion 4 4 agreeableness 4 4 conscientiousness 4 4 neuroticism 4 4 openness 4 4 Model 2 (Intercept) 64 64 m0_sexo_w01 64 64 m0_edad_w01 64 64 log_ing 64 64 trayectoria_deuda2 64 64 trayectoria_deuda3 64 64 trayectoria_insatisf_ing2 64 64 trayectoria_insatisf_ing3 64 64 trayectoria_insatisf_ing4 64 64 trayectoria_ocup22 64 64 trayectoria_ocup23 64 64 trayectoria_ocup24 64 64 trayectoria_ocup25 64 64 trayectoria_activ_fisica2 64 64 trayectoria_activ_fisica3 64 64 trayectoria_activ_fisica4 64 64 fuma_w01Fumador 16 16 imc_w01 16 16 proyecto_vidaDecidido dirección de vida 16 16 apoyo_social_w01Con apoyo social 16 16 extraversion 4 4 agreeableness 4 4 conscientiousness 4 4 neuroticism 4 4 openness 4 4 Model 3 (Intercept) 64 64 m0_sexo_w01 64 64 m0_edad_w01 64 64 log_ing 64 64 trayectoria_deuda2 64 64 trayectoria_deuda3 64 64 trayectoria_insatisf_ing2 64 64 trayectoria_insatisf_ing3 64 64 trayectoria_insatisf_ing4 64 64 trayectoria_ocup22 64 64 trayectoria_ocup23 64 64 trayectoria_ocup24 64 64 trayectoria_ocup25 64 64 trayectoria_activ_fisica2 64 64 trayectoria_activ_fisica3 64 64 trayectoria_activ_fisica4 64 64 fuma_w01Fumador 16 16 imc_w01 16 16 proyecto_vidaDecidido dirección de vida 16 16 apoyo_social_w01Con apoyo social 16 16 extraversion 4 4 agreeableness 4 4 conscientiousness 4 4 neuroticism 4 4 openness 4 4 * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
